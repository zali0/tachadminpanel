{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = gestureHandlerRootHOC;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _GestureHandlerRootView = _interopRequireDefault(require(\"./GestureHandlerRootView\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction gestureHandlerRootHOC(Component, containerStyles) {\n  function Wrapper(props) {\n    return React.createElement(_GestureHandlerRootView.default, {\n      style: [styles.container, containerStyles]\n    }, React.createElement(Component, props));\n  }\n\n  Wrapper.displayName = \"gestureHandlerRootHOC(\" + (Component.displayName || Component.name) + \")\";\n  (0, _hoistNonReactStatics.default)(Wrapper, Component);\n  return Wrapper;\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":";;;;;;;AAAA;;;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,qBAAT,CACbC,SADa,EAEbC,eAFa,EAGW;AACxB,WAASC,OAAT,CAAiBC,KAAjB,EAA2B;AACzB,WACEC,oBAACC,+BAAD;AAAwBC,WAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBP,eAAnB;AAA/B,OACEG,oBAACJ,SAAD,EAAeG,KAAf,CADF,CADF;AAKD;;AAEDD,SAAO,CAACO,WAARP,+BACEF,SAAS,CAACS,WAAVT,IAAyBA,SAAS,CAACU,IADrCR;AAIA,qCAAqBA,OAArB,EAA8BF,SAA9B;AAEA,SAAOE,OAAP;AACD;;AAED,IAAMK,MAAM,GAAGI,wBAAWC,MAAXD,CAAkB;AAC/BH,WAAS,EAAE;AAAEK,QAAI,EAAE;AAAR;AADoB,CAAlBF,CAAf","names":["gestureHandlerRootHOC","Component","containerStyles","Wrapper","props","React","_GestureHandlerRootView","style","styles","container","displayName","name","StyleSheet","create","flex"],"sources":["gestureHandlerRootHOC.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC<P>(\n  Component: React.ComponentType<P>,\n  containerStyles?: StyleProp<ViewStyle>\n): React.ComponentType<P> {\n  function Wrapper(props: P) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${\n    Component.displayName || Component.name\n  })`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n"]},"metadata":{},"sourceType":"script"}