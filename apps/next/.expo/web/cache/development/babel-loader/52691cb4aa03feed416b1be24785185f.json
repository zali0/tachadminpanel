{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"source\", \"color\", \"size\", \"theme\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isValidIcon = exports.isEqualIcon = exports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _settings = require(\"../core/settings\");\n\nvar _MaterialCommunityIcon = require(\"./MaterialCommunityIcon\");\n\nvar _theming = require(\"../core/theming\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar isImageSource = function isImageSource(source) {\n  return typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string' || typeof source === 'number' || _reactNative.Platform.OS === 'web' && typeof source === 'string' && (source.startsWith('data:image') || /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));\n};\n\nvar getIconId = function getIconId(source) {\n  if (typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string') {\n    return source.uri;\n  }\n\n  return source;\n};\n\nvar isValidIcon = function isValidIcon(source) {\n  return typeof source === 'string' || typeof source === 'function' || isImageSource(source);\n};\n\nexports.isValidIcon = isValidIcon;\n\nvar isEqualIcon = function isEqualIcon(a, b) {\n  return a === b || getIconId(a) === getIconId(b);\n};\n\nexports.isEqualIcon = isEqualIcon;\n\nvar Icon = function Icon(_ref) {\n  var source = _ref.source,\n      color = _ref.color,\n      size = _ref.size,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var direction = typeof source === 'object' && source.direction && source.source ? source.direction === 'auto' ? _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr' : source.direction : null;\n  var s = typeof source === 'object' && source.direction && source.source ? source.source : source;\n  var iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return React.createElement(_reactNative.Image, _extends({}, rest, {\n      source: s,\n      style: [{\n        transform: [{\n          scaleX: direction === 'rtl' ? -1 : 1\n        }]\n      }, {\n        width: size,\n        height: size,\n        tintColor: color,\n        resizeMode: 'contain'\n      }]\n    }, _MaterialCommunityIcon.accessibilityProps));\n  } else if (typeof s === 'string') {\n    return React.createElement(_settings.Consumer, null, function (_ref2) {\n      var icon = _ref2.icon;\n      return icon({\n        name: s,\n        color: iconColor,\n        size: size,\n        direction: direction\n      });\n    });\n  } else if (typeof s === 'function') {\n    return s({\n      color: iconColor,\n      size: size,\n      direction: direction\n    });\n  }\n\n  return null;\n};\n\nvar _default = (0, _theming.withTheme)(Icon);\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["isImageSource","source","Object","prototype","hasOwnProperty","call","uri","Platform","OS","startsWith","test","getIconId","isValidIcon","isEqualIcon","a","b","Icon","color","size","theme","rest","direction","I18nManager","isRTL","s","iconColor","colors","text","React","_reactNative","style","transform","scaleX","width","height","tintColor","resizeMode","accessibilityProps","_settings","icon","name"],"sources":["Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]},"metadata":{},"sourceType":"script"}