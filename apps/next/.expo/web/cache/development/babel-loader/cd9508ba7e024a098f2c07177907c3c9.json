{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"inset\", \"style\", \"theme\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../core/theming\");\n\nvar _colors = require(\"../styles/colors\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Divider = function Divider(_ref) {\n  var inset = _ref.inset,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isDarkTheme = theme.dark;\n  return React.createElement(_reactNative.View, _extends({}, rest, {\n    style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style]\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  light: {\n    backgroundColor: (0, _color.default)(_colors.black).alpha(0.12).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  dark: {\n    backgroundColor: (0, _color.default)(_colors.white).alpha(0.12).rgb().string(),\n    height: _reactNative.StyleSheet.hairlineWidth\n  },\n  inset: {\n    marginLeft: 72\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Divider);\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;;AACA;;;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAA6C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAAlBC,IAAkB;;AAC3D,MAAcC,WAAd,GAA8BF,KAA9B,CAAQG,IAAR;AACA,SACEC,oBAACC,iBAAD,eACMJ,IADN;AAEEF,SAAK,EAAE,CACLG,WAAW,GAAGI,MAAM,CAACH,IAAV,GAAiBG,MAAM,CAACC,KAD9B,EAELT,KAAK,IAAIQ,MAAM,CAACR,KAFX,EAGLC,KAHK;AAFT,KADF;AAFF;;AAcA,IAAMO,MAAM,GAAGE,wBAAWC,MAAXD,CAAkB;AAC/BD,OAAK,EAAE;AACLG,mBAAe,EAAE,oBAAMC,aAAN,EAAaC,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADZ;AAELC,UAAM,EAAEP,wBAAWQ;AAFd,GADwB;AAK/Bb,MAAI,EAAE;AACJO,mBAAe,EAAE,oBAAMO,aAAN,EAAaL,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADb;AAEJC,UAAM,EAAEP,wBAAWQ;AAFf,GALyB;AAS/BlB,OAAK,EAAE;AACLoB,cAAU,EAAE;AADP;AATwB,CAAlBV,CAAf;;eAce,wBAAUX,OAAV","names":["Divider","inset","style","theme","rest","isDarkTheme","dark","React","_reactNative","styles","light","StyleSheet","create","backgroundColor","black","alpha","rgb","string","height","hairlineWidth","white","marginLeft"],"sources":["Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, theme, ...rest }: Props) => {\n  const { dark: isDarkTheme } = theme;\n  return (\n    <View\n      {...rest}\n      style={[\n        isDarkTheme ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]},"metadata":{},"sourceType":"script"}