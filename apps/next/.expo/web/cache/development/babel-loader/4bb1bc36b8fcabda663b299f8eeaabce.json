{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DialogActions = function DialogActions(props) {\n  return React.createElement(_reactNative.View, _extends({}, props, {\n    style: [styles.container, props.style]\n  }), React.Children.map(props.children, function (child) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      compact: true\n    }) : child;\n  }));\n};\n\nDialogActions.displayName = 'Dialog.Actions';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8\n  }\n});\n\nvar _default = DialogActions;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,IAAMA,aAAa,GAAIC,SAAjBD,aAAiBC,MAAD;AAAA,SACpBC,oBAACC,iBAAD,eAAUF,KAAV;AAAiBG,SAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBL,KAAK,CAACG,KAAzB;AAAxB,MACGF,KAAK,CAACK,QAANL,CAAeM,GAAfN,CAAmBD,KAAK,CAACQ,QAAzBP,EAAoCQ,eAAD;AAAA,WAClCR,KAAK,CAACS,cAANT,CAAqBQ,KAArBR,IACIA,KAAK,CAACU,YAANV,CAAmBQ,KAAnBR,EAA0B;AACxBW,aAAO,EAAE;AADe,KAA1BX,CADJA,GAIIQ,KAL8B;AAAA,GAAnCR,CADH,CADoB;AAAA,CAAtB;;AAYAF,aAAa,CAACc,WAAdd,GAA4B,gBAA5BA;;AAEA,IAAMK,MAAM,GAAGU,wBAAWC,MAAXD,CAAkB;AAC/BT,WAAS,EAAE;AACTW,iBAAa,EAAE,KADN;AAETC,cAAU,EAAE,QAFH;AAGTC,kBAAc,EAAE,UAHP;AAITC,WAAO,EAAE;AAJA;AADoB,CAAlBL,CAAf;;eASef","names":["DialogActions","props","React","_reactNative","style","styles","container","Children","map","children","child","isValidElement","cloneElement","compact","displayName","StyleSheet","create","flexDirection","alignItems","justifyContent","padding"],"sources":["DialogActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogActions`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a list of actions in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-actions.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Button, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Actions>\n *           <Button onPress={() => console.log('Cancel')}>Cancel</Button>\n *           <Button onPress={() => console.log('Ok')}>Ok</Button>\n *         </Dialog.Actions>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogActions = (props: Props) => (\n  <View {...props} style={[styles.container, props.style]}>\n    {React.Children.map(props.children, (child) =>\n      React.isValidElement(child)\n        ? React.cloneElement(child, {\n            compact: true,\n          })\n        : child\n    )}\n  </View>\n);\n\nDialogActions.displayName = 'Dialog.Actions';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: 8,\n  },\n});\n\nexport default DialogActions;\n"]},"metadata":{},"sourceType":"script"}