{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LongPressGestureHandler = exports.longPressGestureHandlerProps = void 0;\n\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\n\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar longPressGestureHandlerProps = ['minDurationMs', 'maxDist'];\nexports.longPressGestureHandlerProps = longPressGestureHandlerProps;\nvar LongPressGestureHandler = (0, _createHandler.default)({\n  name: 'LongPressGestureHandler',\n  allowedProps: [].concat(_toConsumableArray(_gestureHandlerCommon.baseGestureHandlerProps), longPressGestureHandlerProps),\n  config: {}\n});\nexports.LongPressGestureHandler = LongPressGestureHandler;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;AAKO,IAAMA,4BAA4B,GAAG,CAC1C,eAD0C,EAE1C,SAF0C,CAArC;;AAmEA,IAAMC,uBAAuB,GAAG,4BAGrC;AACAC,MAAI,EAAE,yBADN;AAEAC,cAAY,+BACPC,6CADO,GAEPJ,4BAFO,CAFZ;AAMAK,QAAM,EAAE;AANR,CAHqC,CAAhC","names":["longPressGestureHandlerProps","LongPressGestureHandler","name","allowedProps","baseGestureHandlerProps","config"],"sources":["LongPressGestureHandler.ts"],"sourcesContent":["import createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n] as const;\n\nexport type LongPressGestureHandlerEventPayload = {\n  /**\n   * X coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the view attached to the handler.\n   */\n  x: number;\n\n  /**\n   * Y coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the view attached to the handler.\n   */\n  y: number;\n\n  /**\n   * X coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the root view. It is recommended to use `absoluteX` instead of\n   * `x` in cases when the view attached to the handler can be transformed as an\n   * effect of the gesture.\n   */\n  absoluteX: number;\n\n  /**\n   * Y coordinate, expressed in points, of the current position of the pointer\n   * (finger or a leading pointer when there are multiple fingers placed)\n   * relative to the root view. It is recommended to use `absoluteY` instead of\n   * `y` in cases when the view attached to the handler can be transformed as an\n   * effect of the gesture.\n   */\n  absoluteY: number;\n\n  /**\n   * Duration of the long press (time since the start of the event), expressed\n   * in milliseconds.\n   */\n  duration: number;\n};\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n}\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: 'LongPressGestureHandler',\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n"]},"metadata":{},"sourceType":"script"}