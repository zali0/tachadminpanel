{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"activeUnderlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n    _excluded2 = [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _InputLabel = _interopRequireDefault(require(\"./Label/InputLabel\"));\n\nvar _TextInputAdornment = _interopRequireWildcard(require(\"./Adornment/TextInputAdornment\"));\n\nvar _constants = require(\"./constants\");\n\nvar _helpers = require(\"./helpers\");\n\nvar _enums = require(\"./Adornment/enums\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\n\nvar TextInputFlat = function TextInputFlat(_ref) {\n  var _affixTopPosition, _onAffixChange, _topPosition;\n\n  var _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$editable = _ref.editable,\n      editable = _ref$editable === void 0 ? true : _ref$editable,\n      label = _ref.label,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? false : _ref$error,\n      selectionColor = _ref.selectionColor,\n      underlineColor = _ref.underlineColor,\n      activeUnderlineColor = _ref.activeUnderlineColor,\n      dense = _ref.dense,\n      style = _ref.style,\n      theme = _ref.theme,\n      _ref$render = _ref.render,\n      render = _ref$render === void 0 ? function (props) {\n    return React.createElement(_reactNative.TextInput, props);\n  } : _ref$render,\n      _ref$multiline = _ref.multiline,\n      multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n      parentState = _ref.parentState,\n      innerRef = _ref.innerRef,\n      onFocus = _ref.onFocus,\n      forceFocus = _ref.forceFocus,\n      onBlur = _ref.onBlur,\n      onChangeText = _ref.onChangeText,\n      onLayoutAnimatedText = _ref.onLayoutAnimatedText,\n      onLeftAffixLayoutChange = _ref.onLeftAffixLayoutChange,\n      onRightAffixLayoutChange = _ref.onRightAffixLayoutChange,\n      left = _ref.left,\n      right = _ref.right,\n      placeholderTextColor = _ref.placeholderTextColor,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isAndroid = _reactNative.Platform.OS === 'android';\n  var colors = theme.colors,\n      fonts = theme.fonts;\n  var font = fonts.regular;\n  var hasActiveOutline = parentState.focused || error;\n\n  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},\n      fontSizeStyle = _ref3.fontSize,\n      fontWeight = _ref3.fontWeight,\n      height = _ref3.height,\n      paddingHorizontal = _ref3.paddingHorizontal,\n      textAlign = _ref3.textAlign,\n      viewStyle = _objectWithoutProperties(_ref3, _excluded2);\n\n  var fontSize = fontSizeStyle || _constants.MAXIMIZED_LABEL_FONT_SIZE;\n  var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n  var adornmentConfig = (0, _TextInputAdornment.getAdornmentConfig)({\n    left: left,\n    right: right\n  });\n\n  var _ref4 = (0, _helpers.calculateFlatInputHorizontalPadding)({\n    adornmentConfig: adornmentConfig\n  }),\n      paddingLeft = _ref4.paddingLeft,\n      paddingRight = _ref4.paddingRight;\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal;\n    paddingRight = paddingHorizontal;\n  }\n\n  var leftLayout = parentState.leftLayout,\n      rightLayout = parentState.rightLayout;\n  var rightAffixWidth = right ? rightLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var leftAffixWidth = left ? leftLayout.width || _constants.ADORNMENT_SIZE : _constants.ADORNMENT_SIZE;\n  var adornmentStyleAdjustmentForNativeInput = (0, _TextInputAdornment.getAdornmentStyleAdjustmentForNativeInput)({\n    adornmentConfig: adornmentConfig,\n    rightAffixWidth: rightAffixWidth,\n    leftAffixWidth: leftAffixWidth,\n    paddingHorizontal: paddingHorizontal,\n    inputOffset: _constants.FLAT_INPUT_OFFSET,\n    mode: _enums.InputMode.Flat\n  });\n  var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n\n  if (disabled) {\n    inputTextColor = activeColor = (0, _color.default)(colors.text).alpha(0.54).rgb().string();\n    placeholderColor = colors.disabled;\n    underlineColorCustom = 'transparent';\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    errorColor = colors.error;\n    underlineColorCustom = underlineColor || colors.disabled;\n  }\n\n  var containerStyle = {\n    backgroundColor: theme.dark ? (0, _color.default)(colors.background).lighten(0.24).rgb().string() : (0, _color.default)(colors.background).darken(0.06).rgb().string(),\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness\n  };\n  var labelScale = _constants.MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  var fontScale = _constants.MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n  var labelWidth = parentState.labelLayout.width;\n  var labelHeight = parentState.labelLayout.height;\n  var labelHalfWidth = labelWidth / 2;\n  var labelHalfHeight = labelHeight / 2;\n  var baseLabelTranslateX = (_reactNative.I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (_reactNative.I18nManager.isRTL ? -1 : 1) * paddingLeft;\n  var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n  var inputHeight = (0, _helpers.calculateInputHeight)(labelHeight, height, minInputHeight);\n  var topPosition = (0, _helpers.calculateLabelTopPosition)(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n\n  if (height && typeof height !== 'number') {\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  var paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight: labelHalfHeight,\n    offset: _constants.FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition: topPosition,\n    fontSize: fontSize,\n    label: label,\n    scale: fontScale,\n    isAndroid: isAndroid,\n    styles: _reactNative.StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n  };\n  var pad = (0, _helpers.calculatePadding)(paddingSettings);\n  var paddingFlat = (0, _helpers.adjustPaddingFlat)(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n    pad: pad\n  }));\n  var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n  var placeholderOpacity = hasActiveOutline ? (0, _helpers.interpolatePlaceholder)(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n  var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n  var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n  var iconTopPosition = (flatHeight - _constants.ADORNMENT_SIZE) / 2;\n  var leftAffixTopPosition = leftLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: leftLayout.height\n  })) : null;\n  var rightAffixTopPosition = rightLayout.height ? (0, _helpers.calculateFlatAffixTopPosition)(_objectSpread(_objectSpread({\n    height: flatHeight\n  }, paddingFlat), {}, {\n    affixHeight: rightLayout.height\n  })) : null;\n  var labelProps = {\n    label: label,\n    onLayoutAnimatedText: onLayoutAnimatedText,\n    placeholderOpacity: placeholderOpacity,\n    error: error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY: baseLabelTranslateY,\n    baseLabelTranslateX: baseLabelTranslateX,\n    font: font,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    labelScale: labelScale,\n    wiggleOffsetX: _constants.LABEL_WIGGLE_X_OFFSET,\n    topPosition: topPosition,\n    paddingOffset: {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    },\n    hasActiveOutline: hasActiveOutline,\n    activeColor: activeColor,\n    placeholderColor: placeholderColor,\n    errorColor: errorColor,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n  var affixTopPosition = (_affixTopPosition = {}, _defineProperty(_affixTopPosition, _enums.AdornmentSide.Left, leftAffixTopPosition), _defineProperty(_affixTopPosition, _enums.AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n  var onAffixChange = (_onAffixChange = {}, _defineProperty(_onAffixChange, _enums.AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty(_onAffixChange, _enums.AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n  var adornmentProps = {\n    paddingHorizontal: paddingHorizontal,\n    adornmentConfig: adornmentConfig,\n    forceFocus: forceFocus,\n    topPosition: (_topPosition = {}, _defineProperty(_topPosition, _enums.AdornmentType.Affix, affixTopPosition), _defineProperty(_topPosition, _enums.AdornmentType.Icon, iconTopPosition), _topPosition),\n    onAffixChange: onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier\n  };\n\n  if (adornmentConfig.length) {\n    adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n      left: left,\n      right: right,\n      textStyle: _objectSpread(_objectSpread({}, font), {}, {\n        fontSize: fontSize,\n        fontWeight: fontWeight\n      }),\n      visible: parentState.labeled\n    });\n  }\n\n  return React.createElement(_reactNative.View, {\n    style: [containerStyle, viewStyle]\n  }, React.createElement(Underline, {\n    parentState: parentState,\n    underlineColorCustom: underlineColorCustom,\n    error: error,\n    colors: colors,\n    activeColor: activeColor\n  }), React.createElement(_reactNative.View, {\n    style: [styles.labelContainer, {\n      minHeight: minHeight\n    }]\n  }, !isAndroid && multiline && label && React.createElement(_reactNative.View, {\n    testID: \"patch-container\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, dense ? styles.densePatchContainer : styles.patchContainer, {\n      backgroundColor: viewStyle.backgroundColor || containerStyle.backgroundColor,\n      left: paddingLeft,\n      right: paddingRight\n    }]\n  }), React.createElement(_InputLabel.default, {\n    parentState: parentState,\n    labelProps: labelProps\n  }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({\n    testID: 'text-input-flat'\n  }, rest), {}, {\n    ref: innerRef,\n    onChangeText: onChangeText,\n    placeholder: label ? parentState.placeholder : rest.placeholder,\n    placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n    editable: !disabled && editable,\n    selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    underlineColorAndroid: 'transparent',\n    multiline: multiline,\n    style: [styles.input, {\n      paddingLeft: paddingLeft,\n      paddingRight: paddingRight\n    }, !multiline || multiline && height ? {\n      height: flatHeight\n    } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      color: inputTextColor,\n      textAlignVertical: multiline ? 'top' : 'center',\n      textAlign: textAlign ? textAlign : _reactNative.I18nManager.isRTL ? 'right' : 'left'\n    }), _reactNative.Platform.OS === 'web' && {\n      outline: 'none'\n    }, adornmentStyleAdjustmentForNativeInput]\n  }))), React.createElement(_TextInputAdornment.default, adornmentProps));\n};\n\nvar _default = TextInputFlat;\nexports.default = _default;\n\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n      error = _ref2.error,\n      colors = _ref2.colors,\n      activeColor = _ref2.activeColor,\n      underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(_reactNative.Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2\n  }\n});","map":{"version":3,"mappings":"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","names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","render","props","React","_reactNative","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","maxFontSizeMultiplier","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","Underline","labelContainer","testID","pointerEvents","absoluteFill","densePatchContainer","patchContainer","_InputLabel","ref","underlineColorAndroid","input","color","textAlignVertical","outline","_TextInputAdornment","View","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nconst TextInputFlat = ({\n  disabled = false,\n  editable = true,\n  label,\n  error = false,\n  selectionColor,\n  underlineColor,\n  activeUnderlineColor,\n  dense,\n  style,\n  theme,\n  render = (props: RenderProps) => <NativeTextInput {...props} />,\n  multiline = false,\n  parentState,\n  innerRef,\n  onFocus,\n  forceFocus,\n  onBlur,\n  onChangeText,\n  onLayoutAnimatedText,\n  onLeftAffixLayoutChange,\n  onRightAffixLayoutChange,\n  left,\n  right,\n  placeholderTextColor,\n  ...rest\n}: ChildTextInputProps) => {\n  const isAndroid = Platform.OS === 'android';\n  const { colors, fonts } = theme;\n  const font = fonts.regular;\n  const hasActiveOutline = parentState.focused || error;\n\n  const {\n    fontSize: fontSizeStyle,\n    fontWeight,\n    height,\n    paddingHorizontal,\n    textAlign,\n    ...viewStyle\n  } = (StyleSheet.flatten(style) || {}) as TextStyle;\n  const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n  const isPaddingHorizontalPassed =\n    paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n  const adornmentConfig = getAdornmentConfig({\n    left,\n    right,\n  });\n\n  let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n    adornmentConfig,\n  });\n\n  if (isPaddingHorizontalPassed) {\n    paddingLeft = paddingHorizontal as number;\n    paddingRight = paddingHorizontal as number;\n  }\n\n  const { leftLayout, rightLayout } = parentState;\n\n  const rightAffixWidth = right\n    ? rightLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const leftAffixWidth = left\n    ? leftLayout.width || ADORNMENT_SIZE\n    : ADORNMENT_SIZE;\n\n  const adornmentStyleAdjustmentForNativeInput =\n    getAdornmentStyleAdjustmentForNativeInput({\n      adornmentConfig,\n      rightAffixWidth,\n      leftAffixWidth,\n      paddingHorizontal,\n      inputOffset: FLAT_INPUT_OFFSET,\n      mode: InputMode.Flat,\n    });\n\n  let inputTextColor,\n    activeColor,\n    underlineColorCustom,\n    placeholderColor,\n    errorColor;\n\n  if (disabled) {\n    inputTextColor = activeColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    placeholderColor = colors.disabled;\n    underlineColorCustom = 'transparent';\n  } else {\n    inputTextColor = colors.text;\n    activeColor = error ? colors.error : activeUnderlineColor || colors.primary;\n    placeholderColor = colors.placeholder;\n    errorColor = colors.error;\n    underlineColorCustom = underlineColor || colors.disabled;\n  }\n\n  const containerStyle = {\n    backgroundColor: theme.dark\n      ? color(colors.background).lighten(0.24).rgb().string()\n      : color(colors.background).darken(0.06).rgb().string(),\n    borderTopLeftRadius: theme.roundness,\n    borderTopRightRadius: theme.roundness,\n  };\n\n  const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n  const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n  const labelWidth = parentState.labelLayout.width;\n  const labelHeight = parentState.labelLayout.height;\n  const labelHalfWidth = labelWidth / 2;\n  const labelHalfHeight = labelHeight / 2;\n\n  const baseLabelTranslateX =\n    (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth - (labelScale * labelWidth) / 2) +\n    (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n  const minInputHeight = dense\n    ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE\n    : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n  const inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n\n  const topPosition = calculateLabelTopPosition(\n    labelHeight,\n    inputHeight,\n    multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n  );\n\n  if (height && typeof height !== 'number') {\n    // eslint-disable-next-line\n    console.warn('Currently we support only numbers in height prop');\n  }\n\n  const paddingSettings = {\n    height: height ? +height : null,\n    labelHalfHeight,\n    offset: FLAT_INPUT_OFFSET,\n    multiline: multiline ? multiline : null,\n    dense: dense ? dense : null,\n    topPosition,\n    fontSize,\n    label,\n    scale: fontScale,\n    isAndroid,\n    styles: StyleSheet.flatten(\n      dense ? styles.inputFlatDense : styles.inputFlat\n    ) as Padding,\n  };\n\n  const pad = calculatePadding(paddingSettings);\n\n  const paddingFlat = adjustPaddingFlat({\n    ...paddingSettings,\n    pad,\n  });\n\n  const baseLabelTranslateY =\n    -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n  const placeholderOpacity = hasActiveOutline\n    ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n    : parentState.labelLayout.measured\n    ? 1\n    : 0;\n\n  const minHeight =\n    height ||\n    (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n  const flatHeight =\n    inputHeight +\n    (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n  const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n  const leftAffixTopPosition = leftLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: leftLayout.height,\n      })\n    : null;\n\n  const rightAffixTopPosition = rightLayout.height\n    ? calculateFlatAffixTopPosition({\n        height: flatHeight,\n        ...paddingFlat,\n        affixHeight: rightLayout.height,\n      })\n    : null;\n\n  const labelProps = {\n    label,\n    onLayoutAnimatedText,\n    placeholderOpacity,\n    error,\n    placeholderStyle: styles.placeholder,\n    baseLabelTranslateY,\n    baseLabelTranslateX,\n    font,\n    fontSize,\n    fontWeight,\n    labelScale,\n    wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n    topPosition,\n    paddingOffset: { paddingLeft, paddingRight },\n    hasActiveOutline,\n    activeColor,\n    placeholderColor,\n    errorColor,\n    roundness: theme.roundness,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  const affixTopPosition = {\n    [AdornmentSide.Left]: leftAffixTopPosition,\n    [AdornmentSide.Right]: rightAffixTopPosition,\n  };\n  const onAffixChange = {\n    [AdornmentSide.Left]: onLeftAffixLayoutChange,\n    [AdornmentSide.Right]: onRightAffixLayoutChange,\n  };\n\n  let adornmentProps: TextInputAdornmentProps = {\n    paddingHorizontal,\n    adornmentConfig,\n    forceFocus,\n    topPosition: {\n      [AdornmentType.Affix]: affixTopPosition,\n      [AdornmentType.Icon]: iconTopPosition,\n    },\n    onAffixChange,\n    isTextInputFocused: parentState.focused,\n    maxFontSizeMultiplier: rest.maxFontSizeMultiplier,\n  };\n  if (adornmentConfig.length) {\n    adornmentProps = {\n      ...adornmentProps,\n      left,\n      right,\n      textStyle: { ...font, fontSize, fontWeight },\n      visible: parentState.labeled,\n    };\n  }\n\n  return (\n    <View style={[containerStyle, viewStyle]}>\n      <Underline\n        parentState={parentState}\n        underlineColorCustom={underlineColorCustom}\n        error={error}\n        colors={colors}\n        activeColor={activeColor}\n      />\n      <View\n        style={[\n          styles.labelContainer,\n          {\n            minHeight,\n          },\n        ]}\n      >\n        {!isAndroid && multiline && label && (\n          // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n          // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n          <View\n            testID=\"patch-container\"\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              dense ? styles.densePatchContainer : styles.patchContainer,\n              {\n                backgroundColor:\n                  viewStyle.backgroundColor || containerStyle.backgroundColor,\n                left: paddingLeft,\n                right: paddingRight,\n              },\n            ]}\n          />\n        )}\n        <InputLabel parentState={parentState} labelProps={labelProps} />\n        {render?.({\n          testID: 'text-input-flat',\n          ...rest,\n          ref: innerRef,\n          onChangeText,\n          placeholder: label ? parentState.placeholder : rest.placeholder,\n          placeholderTextColor: placeholderTextColor ?? placeholderColor,\n          editable: !disabled && editable,\n          selectionColor:\n            typeof selectionColor === 'undefined'\n              ? activeColor\n              : selectionColor,\n          onFocus,\n          onBlur,\n          underlineColorAndroid: 'transparent',\n          multiline,\n          style: [\n            styles.input,\n            { paddingLeft, paddingRight },\n            !multiline || (multiline && height) ? { height: flatHeight } : {},\n            paddingFlat,\n            {\n              ...font,\n              fontSize,\n              fontWeight,\n              color: inputTextColor,\n              textAlignVertical: multiline ? 'top' : 'center',\n              textAlign: textAlign\n                ? textAlign\n                : I18nManager.isRTL\n                ? 'right'\n                : 'left',\n            },\n            Platform.OS === 'web' && { outline: 'none' },\n            adornmentStyleAdjustmentForNativeInput,\n          ],\n        })}\n      </View>\n      <TextInputAdornment {...adornmentProps} />\n    </View>\n  );\n};\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}