{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = configureFonts;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100'\n    }\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400'\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500'\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300'\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100'\n    }\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal'\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal'\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal'\n    }\n  }\n};\n\nfunction configureFonts(config) {\n  var fonts = _reactNative.Platform.select(_objectSpread(_objectSpread({}, fontConfig), config));\n\n  return fonts;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAG;AACjBC,KAAG,EAAE;AACHC,WAAO,EAAE;AACPC,gBAAU,EAAE,wDADL;AAEPC,gBAAU,EAAE;AAFL,KADN;AAKHC,UAAM,EAAE;AACNF,gBAAU,EAAE,wDADN;AAENC,gBAAU,EAAE;AAFN,KALL;AASHE,SAAK,EAAE;AACLH,gBAAU,EAAE,wDADP;AAELC,gBAAU,EAAE;AAFP,KATJ;AAaHG,QAAI,EAAE;AACJJ,gBAAU,EAAE,wDADR;AAEJC,gBAAU,EAAE;AAFR;AAbH,GADY;AAmBjBI,KAAG,EAAE;AACHN,WAAO,EAAE;AACPC,gBAAU,EAAE,QADL;AAEPC,gBAAU,EAAE;AAFL,KADN;AAKHC,UAAM,EAAE;AACNF,gBAAU,EAAE,QADN;AAENC,gBAAU,EAAE;AAFN,KALL;AASHE,SAAK,EAAE;AACLH,gBAAU,EAAE,QADP;AAELC,gBAAU,EAAE;AAFP,KATJ;AAaHG,QAAI,EAAE;AACJJ,gBAAU,EAAE,QADR;AAEJC,gBAAU,EAAE;AAFR;AAbH,GAnBY;AAqCjBK,SAAO,EAAE;AACPP,WAAO,EAAE;AACPC,gBAAU,EAAE,YADL;AAEPC,gBAAU,EAAE;AAFL,KADF;AAKPC,UAAM,EAAE;AACNF,gBAAU,EAAE,mBADN;AAENC,gBAAU,EAAE;AAFN,KALD;AASPE,SAAK,EAAE;AACLH,gBAAU,EAAE,kBADP;AAELC,gBAAU,EAAE;AAFP,KATA;AAaPG,QAAI,EAAE;AACJJ,gBAAU,EAAE,iBADR;AAEJC,gBAAU,EAAE;AAFR;AAbC;AArCQ,CAAnB;;AAyDe,SAASM,cAAT,CAAwBC,MAAxB,EAEL;AACR,MAAMC,KAAK,GAAGC,sBAASC,MAATD,iCAAqBb,UAArBa,GAAoCF,MAApCE,EAAd;;AACA,SAAOD,KAAP;AACD","names":["fontConfig","web","regular","fontFamily","fontWeight","medium","light","thin","ios","default","configureFonts","config","fonts","Platform","select"],"sources":["fonts.tsx"],"sourcesContent":["import { Platform, PlatformOSType } from 'react-native';\nimport type { Fonts } from '../types';\n\nconst fontConfig = {\n  web: {\n    regular: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n      fontWeight: '100' as '100',\n    },\n  },\n  ios: {\n    regular: {\n      fontFamily: 'System',\n      fontWeight: '400' as '400',\n    },\n    medium: {\n      fontFamily: 'System',\n      fontWeight: '500' as '500',\n    },\n    light: {\n      fontFamily: 'System',\n      fontWeight: '300' as '300',\n    },\n    thin: {\n      fontFamily: 'System',\n      fontWeight: '100' as '100',\n    },\n  },\n  default: {\n    regular: {\n      fontFamily: 'sans-serif',\n      fontWeight: 'normal' as 'normal',\n    },\n    medium: {\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal' as 'normal',\n    },\n    light: {\n      fontFamily: 'sans-serif-light',\n      fontWeight: 'normal' as 'normal',\n    },\n    thin: {\n      fontFamily: 'sans-serif-thin',\n      fontWeight: 'normal' as 'normal',\n    },\n  },\n};\n\nexport default function configureFonts(config?: {\n  [platform in PlatformOSType | 'default']?: Fonts;\n}): Fonts {\n  const fonts = Platform.select({ ...fontConfig, ...config }) as Fonts;\n  return fonts;\n}\n"]},"metadata":{},"sourceType":"script"}