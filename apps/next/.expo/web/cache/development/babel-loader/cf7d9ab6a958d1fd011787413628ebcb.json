{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _excluded = [\"minPointers\", \"maxPointers\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _GestureHandler = _interopRequireDefault(require(\"./GestureHandler\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar IndiscreteGestureHandler = function (_GestureHandler$defau) {\n  _inherits(IndiscreteGestureHandler, _GestureHandler$defau);\n\n  var _super = _createSuper(IndiscreteGestureHandler);\n\n  function IndiscreteGestureHandler() {\n    _classCallCheck(this, IndiscreteGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndiscreteGestureHandler, [{\n    key: \"shouldEnableGestureOnSetup\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$minPointers = _ref.minPointers,\n          minPointers = _ref$minPointers === void 0 ? 2 : _ref$minPointers,\n          _ref$maxPointers = _ref.maxPointers,\n          maxPointers = _ref$maxPointers === void 0 ? 2 : _ref$maxPointers,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      return _get(_getPrototypeOf(IndiscreteGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        minPointers: minPointers,\n        maxPointers: maxPointers\n      }, props));\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref2, _recognizer, _ref3) {\n      var minPointers = _ref2.minPointers,\n          maxPointers = _ref2.maxPointers;\n      var pointerLength = _ref3.maxPointers;\n\n      if (pointerLength > maxPointers) {\n        return {\n          failed: true\n        };\n      }\n\n      var validPointerCount = pointerLength >= minPointers;\n      return {\n        success: validPointerCount\n      };\n    }\n  }]);\n\n  return IndiscreteGestureHandler;\n}(_GestureHandler.default);\n\nvar _default = IndiscreteGestureHandler;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;IAKeA,wB;;;;;;;;;;;;;SACiB,eAAG;AAC/B,aAAO,KAAP;AACD;;;WAEDC,mCAAoE;AAAA,kCAA9CC,WAA8C;AAAA,UAA9CA,WAA8C,iCAAhC,CAAgC;AAAA,kCAA7BC,WAA6B;AAAA,UAA7BA,WAA6B,iCAAf,CAAe;AAAA,UAATC,KAAS;;AAClE;AACEF,mBAD+B,EAC/BA,WADF;AAEEC,mBAF+B,EAE/BA;AAFF,SAGKC,KAHL;AAKD;;;WAEDC,yCAEEC,WAFFD,SAIE;AAAA,UAHEH,WAGF,SAHEA,WAGF;AAAA,UAHeC,WAGf,SAHeA,WAGf;AAAA,UADeI,aACf,SADEJ,WACF;;AACA,UAAII,aAAa,GAAGJ,WAApB,EAAiC;AAC/B,eAAO;AAAEK,gBAAM,EAAE;AAAV,SAAP;AACD;;AACD,UAAMC,iBAAiB,GAAGF,aAAa,IAAIL,WAA3C;AACA,aAAO;AACLQ,eAAO,EAAED;AADJ,OAAP;AAGD;;;;EAzB6CE,uB;;eA2BjCX","names":["IndiscreteGestureHandler","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","_recognizer","pointerLength","failed","validPointerCount","success","GestureHandler"],"sources":["IndiscreteGestureHandler.ts"],"sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nabstract class IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"script"}