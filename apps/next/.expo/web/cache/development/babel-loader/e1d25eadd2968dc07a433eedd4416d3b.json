{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\n\nvar _constants = require(\"./constants\");\n\nvar _IndiscreteGestureHandler = _interopRequireDefault(require(\"./IndiscreteGestureHandler\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar RotationGestureHandler = function (_IndiscreteGestureHan) {\n  _inherits(RotationGestureHandler, _IndiscreteGestureHan);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    _classCallCheck(this, RotationGestureHandler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RotationGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'rotate';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Rotate;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_ref) {\n      var rotation = _ref.rotation,\n          velocity = _ref.velocity,\n          center = _ref.center;\n\n      var _this$initialRotation;\n\n      return {\n        rotation: (rotation - ((_this$initialRotation = this.initialRotation) !== null && _this$initialRotation !== void 0 ? _this$initialRotation : 0)) * _constants.DEG_RAD,\n        anchorX: center.x,\n        anchorY: center.y,\n        velocity: velocity\n      };\n    }\n  }]);\n\n  return RotationGestureHandler;\n}(_IndiscreteGestureHandler.default);\n\nvar _default = RotationGestureHandler;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;;;;;;;IAEMA,sB;;;;;;;;;;;;;SACI,eAAG;AACT,aAAO,QAAP;AACD;;;SAEqB,eAAG;AACvB,aAAOC,kBAAOC,MAAd;AACD;;;WAEDC,oCAAqE;AAAA,UAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,UAApCC,QAAoC,QAApCA,QAAoC;AAAA,UAA1BC,MAA0B,QAA1BA,MAA0B;;AAAA;;AACnE,aAAO;AACLF,gBAAQ,EAAE,CAACA,QAAQ,6BAAI,KAAKG,eAAT,yEAA4B,CAA5B,CAAT,IAA2CC,kBADhD;AAELC,eAAO,EAAEH,MAAM,CAACI,CAFX;AAGLC,eAAO,EAAEL,MAAM,CAACM,CAHX;AAILP;AAJK,OAAP;AAMD;;;;EAhBkCQ,iC;;eAkBtBb","names":["RotationGestureHandler","Hammer","Rotate","transformNativeEvent","rotation","velocity","center","initialRotation","DEG_RAD","anchorX","x","anchorY","y","IndiscreteGestureHandler"],"sources":["RotationGestureHandler.ts"],"sourcesContent":["import Hammer from '@egjs/hammerjs';\n\nimport { DEG_RAD } from './constants';\nimport { HammerInputExt } from './GestureHandler';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'rotate';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Rotate;\n  }\n\n  transformNativeEvent({ rotation, velocity, center }: HammerInputExt) {\n    return {\n      rotation: (rotation - (this.initialRotation ?? 0)) * DEG_RAD,\n      anchorX: center.x,\n      anchorY: center.y,\n      velocity,\n    };\n  }\n}\nexport default RotationGestureHandler;\n"]},"metadata":{},"sourceType":"script"}