{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _excluded = [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"textStyle\", \"style\", \"numberOfLines\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.DataTableTitle = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../MaterialCommunityIcon\"));\n\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\n\nvar _theming = require(\"../../core/theming\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar DataTableTitle = function DataTableTitle(_ref) {\n  var numeric = _ref.numeric,\n      children = _ref.children,\n      onPress = _ref.onPress,\n      sortDirection = _ref.sortDirection,\n      theme = _ref.theme,\n      textStyle = _ref.textStyle,\n      style = _ref.style,\n      _ref$numberOfLines = _ref.numberOfLines,\n      numberOfLines = _ref$numberOfLines === void 0 ? 1 : _ref$numberOfLines,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(sortDirection === 'ascending' ? 0 : 1)),\n      spinAnim = _React$useRef.current;\n\n  React.useEffect(function () {\n    _reactNative.Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [sortDirection, spinAnim]);\n  var textColor = (0, _color.default)(theme.colors.text).alpha(0.6).rgb().string();\n  var spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg']\n  });\n  var icon = sortDirection ? React.createElement(_reactNative.Animated.View, {\n    style: [styles.icon, {\n      transform: [{\n        rotate: spin\n      }]\n    }]\n  }, React.createElement(_MaterialCommunityIcon.default, {\n    name: \"arrow-up\",\n    size: 16,\n    color: theme.colors.text,\n    direction: _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr'\n  })) : null;\n  return React.createElement(_reactNative.TouchableWithoutFeedback, _extends({\n    disabled: !onPress,\n    onPress: onPress\n  }, rest), React.createElement(_reactNative.View, {\n    style: [styles.container, numeric && styles.right, style]\n  }, icon, React.createElement(_Text.default, {\n    style: [styles.cell, {\n      maxHeight: 24 * numberOfLines\n    }, numberOfLines > 1 ? numeric ? _reactNative.I18nManager.isRTL ? styles.leftText : styles.rightText : styles.centerText : {}, sortDirection ? styles.sorted : {\n      color: textColor\n    }, textStyle],\n    numberOfLines: numberOfLines\n  }, children)));\n};\n\nexports.DataTableTitle = DataTableTitle;\nDataTableTitle.displayName = 'DataTable.Title';\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  rightText: {\n    textAlign: 'right'\n  },\n  leftText: {\n    textAlign: 'left'\n  },\n  centerText: {\n    textAlign: 'center'\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\n\nvar _default = (0, _theming.withTheme)(DataTableTitle);\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;AAAA;;;;AAWA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAUV;AAAA,MATXC,OASW,QATXA,OASW;AAAA,MARXC,QAQW,QARXA,QAQW;AAAA,MAPXC,OAOW,QAPXA,OAOW;AAAA,MANXC,aAMW,QANXA,aAMW;AAAA,MALXC,KAKW,QALXA,KAKW;AAAA,MAJXC,SAIW,QAJXA,SAIW;AAAA,MAHXC,KAGW,QAHXA,KAGW;AAAA,gCAFXC,aAEW;AAAA,MAFXA,aAEW,mCAFK,CAEL;AAAA,MADRC,IACQ;;AACX,sBAA8BC,KAAK,CAACC,MAAND,CAC5B,IAAIE,sBAASC,KAAb,CAAmBT,aAAa,KAAK,WAAlBA,GAAgC,CAAhCA,GAAoC,CAAvD,CAD4BM,CAA9B;AAAA,MAAiBI,QAAjB,iBAAQC,OAAR;;AAIAL,OAAK,CAACM,SAANN,CAAgB,YAAM;AACpBE,0BAASK,MAATL,CAAgBE,QAAhBF,EAA0B;AACxBM,aAAO,EAAEd,aAAa,KAAK,WAAlBA,GAAgC,CAAhCA,GAAoC,CADrB;AAExBe,cAAQ,EAAE,GAFc;AAGxBC,qBAAe,EAAE;AAHO,KAA1BR,EAIGS,KAJHT;AADF,KAMG,CAACR,aAAD,EAAgBU,QAAhB,CANHJ;AAQA,MAAMY,SAAS,GAAG,oBAAMjB,KAAK,CAACkB,MAANlB,CAAamB,IAAnB,EAAyBC,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,GAA0CC,MAA1C,EAAlB;AAEA,MAAMC,IAAI,GAAGd,QAAQ,CAACe,WAATf,CAAqB;AAChCgB,cAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADoB;AAEhCC,eAAW,EAAE,CAAC,MAAD,EAAS,QAAT;AAFmB,GAArBjB,CAAb;AAKA,MAAMkB,IAAI,GAAG5B,aAAa,GACxBM,oBAACuB,sBAASC,IAAV;AAAe3B,SAAK,EAAE,CAAC4B,MAAM,CAACH,IAAR,EAAc;AAAEI,eAAS,EAAE,CAAC;AAAEC,cAAM,EAAET;AAAV,OAAD;AAAb,KAAd;AAAtB,KACElB,oBAAC4B,8BAAD;AACEC,QAAI,EAAC,UADP;AAEEC,QAAI,EAAE,EAFR;AAGEC,SAAK,EAAEpC,KAAK,CAACkB,MAANlB,CAAamB,IAHtB;AAIEkB,aAAS,EAAEC,yBAAYC,KAAZD,GAAoB,KAApBA,GAA4B;AAJzC,IADF,CADwB,GAStB,IATJ;AAWA,SACEjC,oBAACuB,qCAAD;AAA0BY,YAAQ,EAAE,CAAC1C,OAArC;AAA8CA,WAAO,EAAEA;AAAvD,KAAoEM,IAApE,GACEC,oBAACuB,iBAAD;AAAM1B,SAAK,EAAE,CAAC4B,MAAM,CAACW,SAAR,EAAmB7C,OAAO,IAAIkC,MAAM,CAACY,KAArC,EAA4CxC,KAA5C;AAAb,KACGyB,IADH,EAGEtB,oBAACsC,aAAD;AACEzC,SAAK,EAAE,CACL4B,MAAM,CAACc,IADF,EAGL;AAAEC,eAAS,EAAE,KAAK1C;AAAlB,KAHK,EAKLA,aAAa,GAAG,CAAhBA,GACIP,OAAO,GACL0C,yBAAYC,KAAZD,GACER,MAAM,CAACgB,QADTR,GAEER,MAAM,CAACiB,SAHJ,GAILjB,MAAM,CAACkB,UALb7C,GAMI,EAXC,EAYLJ,aAAa,GAAG+B,MAAM,CAACmB,MAAV,GAAmB;AAAEb,WAAK,EAAEnB;AAAT,KAZ3B,EAaLhB,SAbK,CADT;AAgBEE,iBAAa,EAAEA;AAhBjB,KAkBGN,QAlBH,CAHF,CADF,CADF;AAzCF;;;AAuEAF,cAAc,CAACuD,WAAfvD,GAA6B,iBAA7BA;;AAEA,IAAMmC,MAAM,GAAGqB,wBAAWC,MAAXD,CAAkB;AAC/BV,WAAS,EAAE;AACTY,QAAI,EAAE,CADG;AAETC,iBAAa,EAAE,KAFN;AAGTC,gBAAY,EAAE,QAHL;AAITC,mBAAe,EAAE;AAJR,GADoB;AAQ/BT,WAAS,EAAE;AACTU,aAAS,EAAE;AADF,GARoB;AAY/BX,UAAQ,EAAE;AACRW,aAAS,EAAE;AADH,GAZqB;AAgB/BT,YAAU,EAAE;AACVS,aAAS,EAAE;AADD,GAhBmB;AAoB/Bf,OAAK,EAAE;AACLgB,kBAAc,EAAE;AADX,GApBwB;AAwB/Bd,MAAI,EAAE;AACJe,cAAU,EAAE,EADR;AAEJC,YAAQ,EAAE,EAFN;AAGJC,cAAU,EAAE,KAHR;AAIJC,cAAU,EAAE;AAJR,GAxByB;AA+B/Bb,QAAM,EAAE;AACNc,cAAU,EAAE;AADN,GA/BuB;AAmC/BpC,MAAI,EAAE;AACJqC,UAAM,EAAE,EADJ;AAEJN,kBAAc,EAAE;AAFZ;AAnCyB,CAAlBP,CAAf;;eAyCe,wBAAUxD,cAAV","names":["DataTableTitle","numeric","children","onPress","sortDirection","theme","textStyle","style","numberOfLines","rest","React","useRef","Animated","Value","spinAnim","current","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","_reactNative","View","styles","transform","rotate","_MaterialCommunityIcon","name","size","color","direction","I18nManager","isRTL","disabled","container","right","_Text","cell","maxHeight","leftText","rightText","centerText","sorted","displayName","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","textAlign","justifyContent","lineHeight","fontSize","fontWeight","alignItems","marginLeft","height"],"sources":["DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Text content style of the `DataTableTitle`.\n   */\n  textStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  textStyle,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            // height must scale with numberOfLines\n            { maxHeight: 24 * numberOfLines },\n            // if numberOfLines causes wrap, center is lost. Align directly, sensitive to numeric and RTL\n            numberOfLines > 1\n              ? numeric\n                ? I18nManager.isRTL\n                  ? styles.leftText\n                  : styles.rightText\n                : styles.centerText\n              : {},\n            sortDirection ? styles.sorted : { color: textColor },\n            textStyle,\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  rightText: {\n    textAlign: 'right',\n  },\n\n  leftText: {\n    textAlign: 'left',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"script"}