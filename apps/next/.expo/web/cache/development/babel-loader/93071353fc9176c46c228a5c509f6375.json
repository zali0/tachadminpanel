{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon, { isValidIcon, isEqualIcon } from \"./Icon\";\nimport { withTheme } from \"../core/theming\";\n\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      source = _ref.source,\n      theme = _ref.theme;\n\n  var _React$useState = React.useState(function () {\n    return source;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIcon = _React$useState2[0],\n      setCurrentIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      previousIcon = _React$useState4[0],\n      setPreviousIcon = _React$useState4[1];\n\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n      fade = _React$useRef.current;\n\n  var scale = theme.animation.scale;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nexport default withTheme(CrossFadeIcon);\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Icon","isValidIcon","isEqualIcon","withTheme","CrossFadeIcon","color","size","source","theme","useState","currentIcon","setCurrentIcon","previousIcon","setPreviousIcon","useRef","Animated","Value","fade","current","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","View","style","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"sources":["CrossFadeIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport Icon, { isValidIcon, IconSource, isEqualIcon } from './Icon';\n\nimport { withTheme } from '../core/theming';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}