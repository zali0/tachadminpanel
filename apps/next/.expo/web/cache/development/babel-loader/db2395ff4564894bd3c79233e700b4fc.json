{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      roundness = _ref$labelProps.roundness,\n      labelStyle = _ref.labelStyle,\n      maxFontSizeMultiplier = _ref.maxFontSizeMultiplier;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  var labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [React.createElement(_reactNative.Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      opacity: opacity,\n      bottom: Math.max(roundness, 2)\n    }, labelTranslationX]\n  }), React.createElement(_AnimatedText.default, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: [].concat(_toConsumableArray(labelStyle.transform), [{\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }]),\n      maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n    }],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)] : null;\n};\n\nvar _default = LabelBackground;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"mappings":"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","names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","React","_reactNative","View","key","pointerEvents","style","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","_AnimatedText","outlinedLabel","top","scaleY","maxWidth","labelLayout","width","paddingHorizontal","numberOfLines","create","position","left","color"],"sources":["LabelBackground.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport type { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n    roundness,\n  },\n  labelStyle,\n  maxFontSizeMultiplier,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              maxHeight: Math.max(roundness / 3, 2),\n              opacity,\n              bottom: Math.max(roundness, 2),\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n              maxWidth:\n                parentState.labelLayout.width -\n                2 * placeholderStyle.paddingHorizontal,\n            },\n          ]}\n          numberOfLines={1}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}