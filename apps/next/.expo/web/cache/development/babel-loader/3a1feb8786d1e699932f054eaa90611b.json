{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      indicatorColor = _ref.color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      _ref$size = _ref.size,\n      indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n      fade = _React$useRef2.current;\n\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || theme.colors.primary;\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(Animated.View, {\n      style: layerStyle\n    }, React.createElement(Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: viewportStyle\n    }, React.createElement(Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withTheme(ActivityIndicator);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAUA,SAASC,SAAT;AA0BA,IAAMC,QAAQ,GAAG,IAAjB;;AAsBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAQb;AAAA,4BAPXC,SAOW;AAAA,MAPXA,SAOW,+BAPC,IAOD;AAAA,MANJC,cAMI,QANXC,KAMW;AAAA,mCALXC,gBAKW;AAAA,MALXA,gBAKW,sCALQ,IAKR;AAAA,uBAJXC,IAIW;AAAA,MAJLC,aAIK,0BAJW,OAIX;AAAA,MAHXC,KAGW,QAHXA,KAGW;AAAA,MAFXC,KAEW,QAFXA,KAEW;AAAA,MADRC,IACQ;;AACX,sBAA2BZ,KAAK,CAACa,MAANb,CACzB,IAAIc,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADyBf,CAA3B;AAAA,MAAiBgB,KAAjB,iBAAQC,OAAR;;AAGA,uBAA0BjB,KAAK,CAACa,MAANb,CACxB,IAAIc,QAAQ,CAACC,KAAb,CAAmB,CAACX,SAAD,IAAcG,gBAAd,GAAiC,CAAjC,GAAqC,CAAxD,CADwBP,CAA1B;AAAA,MAAiBkB,IAAjB,kBAAQD,OAAR;;AAIA,MAAME,QAAQ,GAAGnB,KAAK,CAACa,MAANb,CACfoB,SADepB,CAAjB;AAIA,MACeqB,KADf,GAEIV,KAFJ,CACEW,SADF,CACeD,KADf;AAIA,MAAME,aAAa,GAAGvB,KAAK,CAACwB,WAANxB,CAAkB,YAAM;AAE5Cc,YAAQ,CAACW,MAATX,CAAgBI,IAAhBJ,EAAsB;AACpBY,cAAQ,EAAE,MAAML,KADI;AAEpBM,aAAO,EAAE,CAFW;AAGpBC,mBAAa,EAAE,KAHK;AAIpBC,qBAAe,EAAE;AAJG,KAAtBf,EAKGgB,KALHhB;;AAQA,QAAIK,QAAQ,CAACF,OAAb,EAAsB;AACpBD,WAAK,CAACe,QAANf,CAAe,CAAfA;AAEAF,cAAQ,CAACkB,IAATlB,CAAcK,QAAQ,CAACF,OAAvBH,EAAgCgB,KAAhChB;AACD;AAdmB,KAenB,CAACO,KAAD,EAAQH,IAAR,EAAcF,KAAd,CAfmBhB,CAAtB;;AAiBA,MAAMiC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAId,QAAQ,CAACF,OAAb,EAAsB;AACpBE,cAAQ,CAACF,OAATE,CAAiBe,IAAjBf;AACD;AAHH;;AAMAnB,OAAK,CAACmC,SAANnC,CAAgB,YAAM;AACpB,QAAImB,QAAQ,CAACF,OAATE,KAAqBC,SAAzB,EAAoC;AAElCD,cAAQ,CAACF,OAATE,GAAmBL,QAAQ,CAACW,MAATX,CAAgBE,KAAhBF,EAAuB;AACxCY,gBAAQ,EAAExB,QAD8B;AAExCkC,cAAM,EAAEC,MAAM,CAACC,MAFyB;AAIxCT,uBAAe,EAAEU,QAAQ,CAACC,EAATD,KAAgB,KAJO;AAKxCZ,eAAO,EAAE,CAL+B;AAMxCC,qBAAa,EAAE;AANyB,OAAvBd,CAAnBK;AAQD;;AAED,QAAIf,SAAJ,EAAe;AACbmB,mBAAa;AADf,WAEO,IAAIhB,gBAAJ,EAAsB;AAE3BO,cAAQ,CAACW,MAATX,CAAgBI,IAAhBJ,EAAsB;AACpBY,gBAAQ,EAAE,MAAML,KADI;AAEpBM,eAAO,EAAE,CAFW;AAGpBE,uBAAe,EAAE,IAHG;AAIpBD,qBAAa,EAAE;AAJK,OAAtBd,EAKGgB,KALHhB,CAKSmB,YALTnB;AAFK,WAQA;AACLmB,kBAAY;AACb;AAzBH,KA0BG,CAAC7B,SAAD,EAAYc,IAAZ,EAAkBX,gBAAlB,EAAoCgB,aAApC,EAAmDF,KAAnD,EAA0DL,KAA1D,CA1BHhB;AA4BA,MAAMM,KAAK,GAAGD,cAAc,IAAIM,KAAK,CAAC8B,MAAN9B,CAAa+B,OAA7C;AACA,MAAMlC,IAAI,GACR,OAAOC,aAAP,KAAyB,QAAzB,GACIA,aAAa,KAAK,OAAlBA,GACE,EADFA,GAEE,EAHN,GAIIA,aAAa,GACbA,aADa,GAEb,EAPN;AASA,MAAMkC,MAAM,GAAI,KAAKzC,QAAL,GAAiB,IAAjC;AACA,MAAMkC,MAAM,GAAGC,MAAM,CAACO,MAAPP,CAAc,GAAdA,EAAmB,GAAnBA,EAAwB,GAAxBA,EAA6B,GAA7BA,CAAf;AACA,MAAMQ,cAAc,GAAG;AACrBC,SAAK,EAAEtC,IADc;AAErBuC,UAAM,EAAEvC,IAAI,GAAG,CAFM;AAGrBwC,YAAQ,EAAE;AAHW,GAAvB;AAMA,SACEhD,oBAACiD,IAAD;AACEvC,SAAK,EAAE,CAACwC,MAAM,CAACC,SAAR,EAAmBzC,KAAnB;AADT,KAEME,IAFN;AAGEwC,cAAU,MAHZ;AAIEC,qBAAiB,EAAC,aAJpB;AAKEC,sBAAkB,EAAE;AAAEC,UAAI,EAAEnD;AAAR;AALtB,MAOEJ,oBAACc,QAAD,CAAUmC,IAAV;AACEvC,SAAK,EAAE,CAAC;AAAEoC,WAAK,EAAEtC,IAAT;AAAeuC,YAAM,EAAEvC,IAAvB;AAA6BgD,aAAO,EAAEtC;AAAtC,KAAD,CADT;AAEEuC,eAAW,EAAE;AAFf,KAIG,CAAC,CAAD,EAAI,CAAJ,EAAOC,GAAP,CAAYC,eAAD,EAAW;AAErB,QAAMC,UAAU,GAAGC,KAAK,CAACC,IAAND,CACjB,IAAIA,KAAJ,CAAUlB,MAAV,CADiBkB,EAEjB,UAACE,CAAD,EAAIC,UAAJ;AAAA,aAAmBA,UAAU,IAAIrB,MAAM,GAAG,CAAb,CAA7B;AAAA,KAFiBkB,CAAnB;AAIA,QAAMI,WAAW,GAAGJ,KAAK,CAACC,IAAND,CAAW,IAAIA,KAAJ,CAAUlB,MAAV,CAAXkB,EAA8B,UAACE,CAAD,EAAIC,UAAJ,EAAmB;AACnE,UAAIE,QAAQ,GAAI,IAAIF,UAAJ,IAAmBrB,MAAM,GAAG,CAA5B,CAAhB;AACA,UAAMxB,QAAQ,GAAGwC,KAAK,GAAG,EAAE,MAAM,EAAR,CAAH,GAAiB,EAAE,MAAM,EAAR,CAAvC;;AAEA,UAAIO,QAAQ,GAAG,GAAf,EAAoB;AAClBA,gBAAQ,GAAG,MAAMA,QAAjBA;AACD;;AAED,UAAMC,SAAS,GAAGR,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAAC,CAAhC;AAEA,aAAUQ,SAAS,IAAI,MAAM,EAAV,CAATA,GAAyB/B,MAAM,CAAC8B,QAAD,CAA/BC,GAA4ChD,QAAtD;AAVkB,MAApB;AAaA,QAAMiD,UAAU,GAAG;AACjBtB,WAAK,EAAEtC,IADU;AAEjBuC,YAAM,EAAEvC,IAFS;AAGjB6D,eAAS,EAAE,CACT;AACEC,cAAM,EAAEtD,KAAK,CAACuD,WAANvD,CAAkB;AACxB4C,oBAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADY;AAExBK,qBAAW,EAAE,CAAI,IAAI,EAAJ,GAAS,EAAb,UAAyB,IAAI,GAAJ,GAAU,EAAV,GAAe,EAAxC;AAFW,SAAlBjD;AADV,OADS;AAHM,KAAnB;AAaA,QAAMwD,aAAa,GAAG;AACpB1B,WAAK,EAAEtC,IADa;AAEpBuC,YAAM,EAAEvC,IAFY;AAGpB6D,eAAS,EAAE,CACT;AACEI,kBAAU,EAAEd,KAAK,GAAG,CAACnD,IAAD,GAAQ,CAAX,GAAe;AADlC,OADS,EAIT;AACE8D,cAAM,EAAEtD,KAAK,CAACuD,WAANvD,CAAkB;AAAE4C,oBAAF,EAAEA,UAAF;AAAcK;AAAd,SAAlBjD;AADV,OAJS;AAHS,KAAtB;AAaA,QAAM0D,WAAW,GAAGf,KAAK,GAAG;AAAEgB,SAAG,EAAEnE,IAAI,GAAG;AAAd,KAAH,GAAuB,IAAhD;AAEA,QAAMoE,SAAS,GAAG;AAChB9B,WAAK,EAAEtC,IADS;AAEhBuC,YAAM,EAAEvC,IAFQ;AAGhBqE,iBAAW,EAAEvE,KAHG;AAIhBwE,iBAAW,EAAEtE,IAAI,GAAG,EAJJ;AAKhBuE,kBAAY,EAAEvE,IAAI,GAAG;AALL,KAAlB;AAQA,WACER,oBAACc,QAAD,CAAUmC,IAAV;AAAe+B,SAAG,EAAErB,KAApB;AAA2BjD,WAAK,EAAE,CAACwC,MAAM,CAAC+B,KAAR;AAAlC,OACEjF,oBAACc,QAAD,CAAUmC,IAAV;AAAevC,WAAK,EAAE0D;AAAtB,OACEpE,oBAACc,QAAD,CAAUmC,IAAV;AACEvC,WAAK,EAAE,CAACmC,cAAD,EAAiB6B,WAAjB,CADT;AAEEjB,iBAAW,EAAE;AAFf,OAIEzD,oBAACc,QAAD,CAAUmC,IAAV;AAAevC,WAAK,EAAE8D;AAAtB,OACExE,oBAACc,QAAD,CAAUmC,IAAV;AAAevC,WAAK,EAAEmC,cAAtB;AAAsCY,iBAAW,EAAE;AAAnD,OACEzD,oBAACc,QAAD,CAAUmC,IAAV;AAAevC,WAAK,EAAEkE;AAAtB,MADF,CADF,CAJF,CADF,CADF,CADF;AAvDD,IAJH,CAPF,CADF;AA7FF;;AAsLA,IAAM1B,MAAM,GAAGgC,UAAU,CAACC,MAAXD,CAAkB;AAC/B/B,WAAS,EAAE;AACTiC,kBAAc,EAAE,QADP;AAETC,cAAU,EAAE;AAFH,GADoB;AAM/BJ,OAAK,kCACAC,UAAU,CAACI,kBADX;AAGHF,kBAAc,EAAE,QAHb;AAIHC,cAAU,EAAE;AAJT;AAN0B,CAAlBH,CAAf;AAcA,eAAejF,SAAS,CAACE,iBAAD,CAAxB","names":["React","withTheme","DURATION","ActivityIndicator","animating","indicatorColor","color","hidesWhenStopped","size","indicatorSize","style","theme","rest","useRef","Animated","Value","timer","current","fade","rotation","undefined","scale","animation","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","primary","frames","bezier","containerStyle","width","height","overflow","View","styles","container","accessible","accessibilityRole","accessibilityState","busy","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"sources":["ActivityIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}