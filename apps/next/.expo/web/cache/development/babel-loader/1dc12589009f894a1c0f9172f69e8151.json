{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"testID\", \"animateFrom\", \"extended\", \"iconMode\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport color from 'color';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Surface from \"../../Surface\";\nimport Icon from \"../../Icon\";\nimport TouchableRipple from \"../../TouchableRipple/TouchableRipple\";\nimport { withTheme } from \"../../../core/theming\";\nimport { white, black } from \"../../../styles/colors\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\nimport { getCombinedStyles } from \"./utils\";\nvar SIZE = 56;\nvar BORDER_RADIUS = SIZE / 2;\nvar SCALE = 0.9;\n\nvar AnimatedFAB = function AnimatedFAB(_ref) {\n  var icon = _ref.icon,\n      label = _ref.label,\n      _ref$accessibilityLab = _ref.accessibilityLabel,\n      accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n      accessibilityState = _ref.accessibilityState,\n      customColor = _ref.color,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      theme = _ref.theme,\n      style = _ref.style,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? true : _ref$visible,\n      _ref$uppercase = _ref.uppercase,\n      uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n      testID = _ref.testID,\n      _ref$animateFrom = _ref.animateFrom,\n      animateFrom = _ref$animateFrom === void 0 ? 'right' : _ref$animateFrom,\n      _ref$extended = _ref.extended,\n      extended = _ref$extended === void 0 ? false : _ref$extended,\n      _ref$iconMode = _ref.iconMode,\n      iconMode = _ref$iconMode === void 0 ? 'dynamic' : _ref$iconMode,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var isIOS = Platform.OS === 'ios';\n  var isAnimatedFromRight = animateFrom === 'right';\n  var isIconStatic = iconMode === 'static';\n  var isRTL = I18nManager.isRTL;\n\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n      visibility = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(0)),\n      animFAB = _React$useRef2.current;\n\n  var scale = theme.animation.scale;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textWidth = _React$useState2[0],\n      setTextWidth = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      textHeight = _React$useState4[0],\n      setTextHeight = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var disabledColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n\n  var _ref3 = StyleSheet.flatten(style) || {},\n      _ref3$backgroundColor = _ref3.backgroundColor,\n      backgroundColor = _ref3$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref3$backgroundColor;\n\n  var foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n  } else {\n    foregroundColor = !color(backgroundColor).isLight() ? white : 'rgba(0, 0, 0, .54)';\n  }\n\n  var rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n  var extendedWidth = textWidth + 1.5 * SIZE;\n  var distance = isAnimatedFromRight ? -textWidth - BORDER_RADIUS : textWidth + BORDER_RADIUS;\n  React.useEffect(function () {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    var currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  var propForDirection = function propForDirection(right) {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  var combinedStyles = getCombinedStyles({\n    isAnimatedFromRight: isAnimatedFromRight,\n    isIconStatic: isIconStatic,\n    distance: distance,\n    animFAB: animFAB\n  });\n  return React.createElement(Surface, _extends({}, rest, {\n    style: [{\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }],\n      elevation: isIOS ? 6 : 0\n    }, styles.container, disabled && styles.disabled, style]\n  }), React.createElement(Animated.View, {\n    style: [{\n      transform: [{\n        scaleY: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([SCALE, 1])\n        })\n      }]\n    }, styles.standard]\n  }, React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.shadowWrapper]\n  }, React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.shadow, {\n      width: extendedWidth,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([1, 0.15, 0])\n      })\n    }]\n  }), React.createElement(Animated.View, {\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.shadow, {\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([0, 0.85, 1])\n      }),\n      width: SIZE,\n      borderRadius: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0]),\n        outputRange: propForDirection([SIZE / (extendedWidth / SIZE), BORDER_RADIUS])\n      })\n    }, combinedStyles.absoluteFill]\n  })), React.createElement(Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.innerWrapper]\n  }, React.createElement(Animated.View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      backgroundColor: backgroundColor\n    }, combinedStyles.innerWrapper]\n  }, React.createElement(TouchableRipple, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: _objectSpread(_objectSpread({}, accessibilityState), {}, {\n      disabled: disabled\n    }),\n    testID: testID,\n    style: styles.touchable\n  }, React.createElement(View, {\n    style: [styles.standard, {\n      width: extendedWidth\n    }]\n  }))))), React.createElement(Animated.View, {\n    style: [styles.iconWrapper, combinedStyles.iconWrapper],\n    pointerEvents: \"none\"\n  }, React.createElement(Icon, {\n    source: icon,\n    size: 24,\n    color: foregroundColor\n  })), React.createElement(View, {\n    pointerEvents: \"none\"\n  }, React.createElement(AnimatedText, {\n    numberOfLines: 1,\n    onTextLayout: isIOS ? onTextLayout : undefined,\n    ellipsizeMode: 'tail',\n    style: [_defineProperty({}, isAnimatedFromRight || isRTL ? 'right' : 'left', isIconStatic ? isIOS ? SIZE - 10 : SIZE - 12 : BORDER_RADIUS), {\n      minWidth: textWidth,\n      top: -BORDER_RADIUS - textHeight / 2,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.7 * distance, 0]),\n        outputRange: propForDirection([1, 0, 0])\n      }),\n      transform: [{\n        translateX: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([0, SIZE])\n        })\n      }]\n    }, styles.label, uppercase && styles.uppercaseLabel, _objectSpread({\n      color: foregroundColor\n    }, theme.fonts.medium)]\n  }, label)), !isIOS && React.createElement(ScrollView, {\n    style: styles.textPlaceholderContainer\n  }, React.createElement(Text, {\n    onTextLayout: onTextLayout\n  }, label)));\n};\n\nvar styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS\n  },\n  disabled: {\n    elevation: 0\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS\n  },\n  shadowWrapper: {\n    elevation: 0\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE\n  },\n  label: {\n    position: 'absolute'\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute'\n  }\n});\nexport default withTheme(AnimatedFAB);","map":{"version":3,"mappings":"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","names":["React","color","Surface","Icon","TouchableRipple","withTheme","white","black","AnimatedText","getCombinedStyles","SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","icon","label","accessibilityLabel","accessibilityState","customColor","disabled","onPress","onLongPress","theme","style","visible","uppercase","testID","animateFrom","extended","iconMode","rest","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","useRef","Animated","Value","visibility","current","animFAB","scale","animation","useState","textWidth","setTextWidth","textHeight","setTextHeight","useEffect","timing","toValue","duration","useNativeDriver","start","disabledColor","dark","alpha","rgb","string","StyleSheet","flatten","backgroundColor","colors","accent","foregroundColor","isLight","rippleColor","extendedWidth","distance","easing","Easing","linear","onTextLayout","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","opacity","transform","elevation","styles","container","View","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","pointerEvents","shadow","borderRadius","innerWrapper","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","touchable","iconWrapper","source","size","numberOfLines","undefined","ellipsizeMode","minWidth","top","translateX","uppercaseLabel","fonts","medium","ScrollView","textPlaceholderContainer","Text","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform"],"sources":["AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"]},"metadata":{},"sourceType":"module"}