{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"./theming\");\n\nvar _settings = require(\"./settings\");\n\nvar _MaterialCommunityIcon = _interopRequireDefault(require(\"../components/MaterialCommunityIcon\"));\n\nvar _PortalHost = _interopRequireDefault(require(\"../components/Portal/PortalHost\"));\n\nvar _DefaultTheme = _interopRequireDefault(require(\"../styles/DefaultTheme\"));\n\nvar _DarkTheme = _interopRequireDefault(require(\"../styles/DarkTheme\"));\n\nvar _addEventListener = require(\"../utils/addEventListener\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar Provider = function Provider(_ref) {\n  var props = _extends({}, _ref);\n\n  var colorSchemeName = !props.theme && (_reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = (0, _addEventListener.addEventListener)(_reactNative.AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme) {\n      appearanceSubscription = _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          _reactNative.Appearance === null || _reactNative.Appearance === void 0 ? void 0 : _reactNative.Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  var getTheme = function getTheme() {\n    var providedTheme = props.theme;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      var theme = colorScheme === 'dark' ? _DarkTheme.default : _DefaultTheme.default;\n      return _objectSpread(_objectSpread({}, theme), {}, {\n        animation: _objectSpread(_objectSpread({}, theme.animation), {}, {\n          scale: reduceMotionEnabled ? 0 : 1\n        })\n      });\n    }\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(_PortalHost.default, null, React.createElement(_settings.Provider, {\n    value: settings || {\n      icon: _MaterialCommunityIcon.default\n    }\n  }, React.createElement(_theming.ThemeProvider, {\n    theme: getTheme()\n  }, children)));\n};\n\nvar _default = Provider;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAAyB;AAAA,MAAnBC,KAAmB;;AACxC,MAAMC,eAAe,GAClB,CAACD,KAAK,CAACE,KAAP,KAAgBC,4BAAhB,IAAgBA,gCAAhB,MAAgBA,GAAhB,MAAgBA,2BAAYC,cAAZD,EAAhB,KAAiD,OADpD;;AAGA,wBACEE,KAAK,CAACC,QAAND,CAAwB,KAAxBA,CADF;AAAA;AAAA,MAAOE,mBAAP;AAAA,MAA4BC,sBAA5B;;AAEA,yBACEH,KAAK,CAACC,QAAND,CAAgCJ,eAAhCI,CADF;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AAGA,MAAMC,sBAAsB,GAC1BC,SADID,sBACJC,YAD6B,EAE1B;AACH,QAAQH,WAAR,GAAwBG,WAAxB,CAAQH,WAAR;AACAC,kBAAc,CAACD,WAAD,CAAdC;AAJF;;AAOAL,OAAK,CAACQ,SAANR,CAAgB,YAAM;AACpB,QAAIS,YAAJ;;AAEA,QAAI,CAACd,KAAK,CAACE,KAAX,EAAkB;AAChBY,kBAAY,GAAG,wCACbC,8BADa,EAEb,qBAFa,EAGbP,sBAHa,CAAfM;AAKD;;AACD,WAAO,YAAM;AACX,UAAI,CAACd,KAAK,CAACE,KAAX,EAAkB;AAAA;;AAChB,2CAAY,IAAZ,sDAAcc,MAAd;AACD;AAHH;AAVF,KAeG,CAAChB,KAAK,CAACE,KAAP,CAfHG;AAiBAA,OAAK,CAACQ,SAANR,CAAgB,YAAM;AACpB,QAAIY,sBAAJ;;AACA,QAAI,CAACjB,KAAK,CAACE,KAAX,EAAkB;AAChBe,4BAAsB,GAAGd,4BAAH,IAAGA,gCAAH,MAAGA,GAAH,MAAGA,2BAAYe,iBAAZf,CACvBQ,sBADuBR,CAAzBc;AAGD;;AACD,WAAO,YAAM;AACX,UAAI,CAACjB,KAAK,CAACE,KAAX,EAAkB;AAChB,YAAIe,sBAAJ,EAA4B;AAC1BA,gCAAsB,CAACD,MAAvBC;AADF,eAEO;AACLd,oHAAYgB,oBAAZhB,CAAiCQ,sBAAjCR;AACD;AACF;AAPH;AAPF,KAgBG,CAACH,KAAK,CAACE,KAAP,CAhBHG;;AAkBA,MAAMe,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAeC,aAAf,GAAiCrB,KAAjC,CAAQE,KAAR;;AAEA,QAAImB,aAAJ,EAAmB;AACjB,aAAOA,aAAP;AADF,WAEO;AACL,UAAMnB,KAAK,GACTO,WAAW,KAAK,MAAhBA,GAAyBa,kBAAzBb,GAAqCc,qBADvC;AAIA,6CACKrB,KADL;AAEEsB,iBAAS,kCACJtB,KAAK,CAACsB,SADF;AAEPC,eAAK,EAAElB,mBAAmB,GAAG,CAAH,GAAO;AAF1B;AAFX;AAOD;AAjBH;;AAoBA,MAAQmB,QAAR,GAA+B1B,KAA/B,CAAQ0B,QAAR;AAAA,MAAkBC,QAAlB,GAA+B3B,KAA/B,CAAkB2B,QAAlB;AACA,SACEtB,oBAACuB,mBAAD,QACEvB,oBAACwB,kBAAD;AAAkBC,SAAK,EAAEH,QAAQ,IAAI;AAAEI,UAAI,EAAEC;AAAR;AAArC,KACE3B,oBAAC4B,sBAAD;AAAe/B,SAAK,EAAEkB,QAAQ;AAA9B,KAAmCM,QAAnC,CADF,CADF,CADF;AAxEF;;eAiFe3B","names":["Provider","props","colorSchemeName","theme","Appearance","getColorScheme","React","useState","reduceMotionEnabled","setReduceMotionEnabled","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","DarkTheme","DefaultTheme","animation","scale","children","settings","_PortalHost","_settings","value","icon","MaterialCommunityIcon","_theming"],"sources":["Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\nimport { addEventListener } from '../utils/addEventListener';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (\n        colorScheme === 'dark' ? DarkTheme : DefaultTheme\n      ) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"script"}