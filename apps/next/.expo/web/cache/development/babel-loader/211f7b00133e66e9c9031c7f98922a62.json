{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ToggleButtonGroup from \"./ToggleButtonGroup\";\nimport ToggleButton from \"./ToggleButton\";\n\nvar ToggleButtonRow = function ToggleButtonRow(_ref) {\n  var value = _ref.value,\n      onValueChange = _ref.onValueChange,\n      children = _ref.children,\n      style = _ref.style;\n  var count = React.Children.count(children);\n  return React.createElement(ToggleButtonGroup, {\n    value: value,\n    onValueChange: onValueChange\n  }, React.createElement(View, {\n    style: [styles.row, style]\n  }, React.Children.map(children, function (child, i) {\n    if (child && child.type === ToggleButton) {\n      return React.cloneElement(child, {\n        style: [styles.button, i === 0 ? styles.first : i === count - 1 ? styles.last : styles.middle, child.props.style]\n      });\n    }\n\n    return child;\n  })));\n};\n\nToggleButtonRow.displayName = 'ToggleButton.Row';\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  button: {\n    borderWidth: StyleSheet.hairlineWidth\n  },\n  first: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  middle: {\n    borderRadius: 0,\n    borderLeftWidth: 0\n  },\n  last: {\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  }\n});\nexport default ToggleButtonRow;\nexport { ToggleButtonRow };","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,OAAOC,iBAAP;AACA,OAAOC,YAAP;;AA+CA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAsD;AAAA,MAAnDC,KAAmD,QAAnDA,KAAmD;AAAA,MAA5CC,aAA4C,QAA5CA,aAA4C;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAC5E,MAAMC,KAAK,GAAGR,KAAK,CAACS,QAANT,CAAeQ,KAAfR,CAAqBM,QAArBN,CAAd;AAEA,SACEA,oBAACC,iBAAD;AAAmBG,SAAK,EAAEA,KAA1B;AAAiCC,iBAAa,EAAEA;AAAhD,KACEL,oBAACU,IAAD;AAAMH,SAAK,EAAE,CAACI,MAAM,CAACC,GAAR,EAAaL,KAAb;AAAb,KACGP,KAAK,CAACS,QAANT,CAAea,GAAfb,CAAmBM,QAAnBN,EAA6B,UAACc,KAAD,EAAQC,CAAR,EAAc;AAE1C,QAAID,KAAK,IAAIA,KAAK,CAACE,IAANF,KAAeZ,YAA5B,EAA0C;AAExC,aAAOF,KAAK,CAACiB,YAANjB,CAAmBc,KAAnBd,EAA0B;AAC/BO,aAAK,EAAE,CACLI,MAAM,CAACO,MADF,EAELH,CAAC,KAAK,CAANA,GACIJ,MAAM,CAACQ,KADXJ,GAEIA,CAAC,KAAKP,KAAK,GAAG,CAAdO,GACAJ,MAAM,CAACS,IADPL,GAEAJ,MAAM,CAACU,MANN,EAQLP,KAAK,CAACQ,KAANR,CAAYP,KARP;AADwB,OAA1BP,CAAP;AAYD;;AAED,WAAOc,KAAP;AAlBD,IADH,CADF,CADF;AAHF;;AA+BAX,eAAe,CAACoB,WAAhBpB,GAA8B,kBAA9BA;AAEA,IAAMQ,MAAM,GAAGa,UAAU,CAACC,MAAXD,CAAkB;AAC/BZ,KAAG,EAAE;AACHc,iBAAa,EAAE;AADZ,GAD0B;AAI/BR,QAAM,EAAE;AACNS,eAAW,EAAEH,UAAU,CAACI;AADlB,GAJuB;AAQ/BT,OAAK,EAAE;AACLU,wBAAoB,EAAE,CADjB;AAELC,2BAAuB,EAAE;AAFpB,GARwB;AAa/BT,QAAM,EAAE;AACNU,gBAAY,EAAE,CADR;AAENC,mBAAe,EAAE;AAFX,GAbuB;AAkB/BZ,MAAI,EAAE;AACJY,mBAAe,EAAE,CADb;AAEJC,uBAAmB,EAAE,CAFjB;AAGJC,0BAAsB,EAAE;AAHpB;AAlByB,CAAlBV,CAAf;AAyBA,eAAerB,eAAf;AAGA,SAASA,eAAT","names":["React","ToggleButtonGroup","ToggleButton","ToggleButtonRow","value","onValueChange","children","style","count","Children","View","styles","row","map","child","i","type","cloneElement","button","first","last","middle","props","displayName","StyleSheet","create","flexDirection","borderWidth","hairlineWidth","borderTopRightRadius","borderBottomRightRadius","borderRadius","borderLeftWidth","borderTopLeftRadius","borderBottomLeftRadius"],"sources":["ToggleButtonRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport ToggleButtonGroup from './ToggleButtonGroup';\nimport ToggleButton from './ToggleButton';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Toggle button row renders a group of toggle buttons in a row.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/toggle-button-row.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ToggleButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('left');\n *\n *   return (\n *     <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n *       <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *       <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *     </ToggleButton.Row>\n *   );\n * };\n *\n * export default MyComponent;\n *\n *```\n */\nconst ToggleButtonRow = ({ value, onValueChange, children, style }: Props) => {\n  const count = React.Children.count(children);\n\n  return (\n    <ToggleButtonGroup value={value} onValueChange={onValueChange}>\n      <View style={[styles.row, style]}>\n        {React.Children.map(children, (child, i) => {\n          // @ts-expect-error: TypeScript complains about child.type but it doesn't matter\n          if (child && child.type === ToggleButton) {\n            // @ts-expect-error: We're sure that child is a React Element\n            return React.cloneElement(child, {\n              style: [\n                styles.button,\n                i === 0\n                  ? styles.first\n                  : i === count - 1\n                  ? styles.last\n                  : styles.middle,\n                // @ts-expect-error: We're sure that child is a React Element\n                child.props.style,\n              ],\n            });\n          }\n\n          return child;\n        })}\n      </View>\n    </ToggleButtonGroup>\n  );\n};\n\nToggleButtonRow.displayName = 'ToggleButton.Row';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  button: {\n    borderWidth: StyleSheet.hairlineWidth,\n  },\n\n  first: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n\n  middle: {\n    borderRadius: 0,\n    borderLeftWidth: 0,\n  },\n\n  last: {\n    borderLeftWidth: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n});\n\nexport default ToggleButtonRow;\n\n// @component-docs ignore-next-line\nexport { ToggleButtonRow };\n"]},"metadata":{},"sourceType":"module"}