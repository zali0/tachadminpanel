{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theming = require(\"../../core/theming\");\n\nvar _Portal = _interopRequireDefault(require(\"../Portal/Portal\"));\n\nvar _Surface = _interopRequireDefault(require(\"../Surface\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"./MenuItem\"));\n\nvar _constants = require(\"../../constants\");\n\nvar _addEventListener = require(\"../../utils/addEventListener\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\n\nvar EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new _reactNative.Animated.Value(0),\n      scaleAnimation: new _reactNative.Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"anchor\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"menu\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"backHandlerSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dimensionsSubscription\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isCoordinate\", function (anchor) {\n      return !React.isValidElement(anchor) && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.x) === 'number' && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.y) === 'number';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"measureMenuLayout\", function () {\n      return new Promise(function (resolve) {\n        if (_this.menu) {\n          _this.menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"measureAnchorLayout\", function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this.isCoordinate(anchor)) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this.anchor) {\n          _this.anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateVisibility\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this.show();\n              } else {\n                _this.hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isBrowser\", function () {\n      return _reactNative.Platform.OS === 'web' && 'document' in global;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusFirstDOMNode\", function (el) {\n      if (el && _this.isBrowser()) {\n        var node = (0, _reactNative.findNodeHandle)(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDismiss\", function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeypress\", function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"attachListeners\", function () {\n      _this.backHandlerSubscription = (0, _addEventListener.addEventListener)(_reactNative.BackHandler, 'hardwareBackPress', _this.handleDismiss);\n      _this.dimensionsSubscription = (0, _addEventListener.addEventListener)(_reactNative.Dimensions, 'change', _this.handleDismiss);\n      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeListeners\", function () {\n      var _this$backHandlerSubs, _this$dimensionsSubsc;\n\n      (_this$backHandlerSubs = _this.backHandlerSubscription) === null || _this$backHandlerSubs === void 0 ? void 0 : _this$backHandlerSubs.remove();\n      (_this$dimensionsSubsc = _this.dimensionsSubscription) === null || _this$dimensionsSubsc === void 0 ? void 0 : _this$dimensionsSubsc.remove();\n      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"show\", function _callee2() {\n      var windowLayout, _await$Promise$all, _await$Promise$all2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = _reactNative.Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]));\n\n            case 3:\n              _await$Promise$all = _context2.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n              menuLayout = _await$Promise$all2[0];\n              anchorLayout = _await$Promise$all2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isCoordinate(_this.props.anchor) || !anchorLayout.height && !_this.isCoordinate(_this.props.anchor))) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this.show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this.attachListeners();\n\n                var animation = _this.props.theme.animation;\n\n                _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), _reactNative.Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref) {\n                  var finished = _ref.finished;\n\n                  if (finished) {\n                    _this.focusFirstDOMNode(_this.menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hide\", function () {\n      _this.removeListeners();\n\n      var animation = _this.props.theme.animation;\n\n      _reactNative.Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            },\n            rendered: false\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this.focusFirstDOMNode(_this.anchor);\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this.updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss,\n          overlayAccessibilityLabel = _this$props.overlayAccessibilityLabel;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n\n      var additionalVerticalValue = _reactNative.Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n\n      var windowLayout = _reactNative.Dimensions.get('window');\n\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue\n      }, _reactNative.I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(_reactNative.View, {\n        ref: function ref(_ref3) {\n          _this2.anchor = _ref3;\n        },\n        collapsable: false\n      }, this.isCoordinate(anchor) ? null : anchor, rendered ? React.createElement(_Portal.default, null, React.createElement(_reactNative.TouchableWithoutFeedback, {\n        accessibilityLabel: overlayAccessibilityLabel,\n        accessibilityRole: \"button\",\n        onPress: onDismiss\n      }, React.createElement(_reactNative.View, {\n        style: _reactNative.StyleSheet.absoluteFill\n      })), React.createElement(_reactNative.View, {\n        ref: function ref(_ref4) {\n          _this2.menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        onAccessibilityEscape: onDismiss\n      }, React.createElement(_reactNative.Animated.View, {\n        style: {\n          transform: positionTransforms\n        }\n      }, React.createElement(_Surface.default, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle]\n      }, scrollableMenuHeight && React.createElement(_reactNative.ScrollView, null, children) || React.createElement(React.Fragment, null, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\n_defineProperty(Menu, \"Item\", _MenuItem.default);\n\n_defineProperty(Menu, \"defaultProps\", {\n  statusBarHeight: _constants.APPROX_STATUSBAR_HEIGHT,\n  overlayAccessibilityLabel: 'Close menu'\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\n\nvar _default = (0, _theming.withTheme)(Menu);\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAmBA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,IAAMA,aAAa,GAAG,CAAtB;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;;AAEA,IAAMC,MAAM,GAAGC,oBAAOC,MAAPD,CAAc,GAAdA,EAAmB,CAAnBA,EAAsB,GAAtBA,EAA2B,CAA3BA,CAAf;;IAgDME,I;;;;;AAA2C;AAAA;;AAAA;;AAAA;;AAAAC,4DAiBvC;AACNC,cAAQ,EAAE,MAAKC,KAAL,CAAWC,OADf;AAENC,SAAG,EAAE,CAFC;AAGNC,UAAI,EAAE,CAHA;AAINC,gBAAU,EAAE;AAAEC,aAAK,EAAE,CAAT;AAAYC,cAAM,EAAE;AAApB,OAJN;AAKNC,kBAAY,EAAE;AAAEF,aAAK,EAAE,CAAT;AAAYC,cAAM,EAAE;AAApB,OALR;AAMNE,sBAAgB,EAAE,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CANZ;AAONC,oBAAc,EAAE,IAAIF,sBAASG,OAAb,CAAqB;AAAEC,SAAC,EAAE,CAAL;AAAQC,SAAC,EAAE;AAAX,OAArB;AAPV,KAjBuC;;AAAAhB,6DAqChB,IArCgB;;AAAAA,2DAsClB,IAtCkB;;AAAAA;;AAAAA;;AAAAA,mEA0CvBiB,gBAAD;AAAA,aACrB,CAACC,KAAK,CAACC,cAAND,CAAqBD,MAArBC,CAAD,IACA,QAAOD,MAAP,SAAOA,UAAP,WAAOA,GAAP,MAAOA,SAAM,CAAEF,CAAf,MAAqB,QADrB,IAEA,QAAOE,MAAP,SAAOA,UAAP,WAAOA,GAAP,MAAOA,SAAM,CAAED,CAAf,MAAqB,QAHA;AAAA,KA1CwB;;AAAAhB,wEA+CnB;AAAA,aAC1B,IAAIoB,OAAJ,CAA8BC,iBAAD,EAAa;AACxC,YAAI,MAAKC,IAAT,EAAe;AACb,gBAAKA,IAAL,CAAUC,eAAV,CAA0B,UAACR,CAAD,EAAIC,CAAJ,EAAOT,KAAP,EAAcC,MAAd,EAAyB;AACjDa,mBAAO,CAAC;AAAEN,eAAF,EAAEA,CAAF;AAAKC,eAAL,EAAKA,CAAL;AAAQT,mBAAR,EAAQA,KAAR;AAAeC;AAAf,aAAD,CAAPa;AADF;AAGD;AALH,QAD0B;AAAA,KA/CmB;;AAAArB,0EAwDjB;AAAA,aAC5B,IAAIoB,OAAJ,CAA8BC,iBAAD,EAAa;AACxC,YAAQJ,MAAR,GAAmB,MAAKf,KAAxB,CAAQe,MAAR;;AACA,YAAI,MAAKO,YAAL,CAAkBP,MAAlB,CAAJ,EAA+B;AAC7BI,iBAAO,CAAC;AAAEN,aAAC,EAAEE,MAAM,CAACF,CAAZ;AAAeC,aAAC,EAAEC,MAAM,CAACD,CAAzB;AAA4BT,iBAAK,EAAE,CAAnC;AAAsCC,kBAAM,EAAE;AAA9C,WAAD,CAAPa;AACA;AACD;;AAED,YAAI,MAAKJ,MAAT,EAAiB;AACf,gBAAKA,MAAL,CAAYM,eAAZ,CAA4B,UAACR,CAAD,EAAIC,CAAJ,EAAOT,KAAP,EAAcC,MAAd,EAAyB;AACnDa,mBAAO,CAAC;AAAEN,eAAF,EAAEA,CAAF;AAAKC,eAAL,EAAKA,CAAL;AAAQT,mBAAR,EAAQA,KAAR;AAAeC;AAAf,aAAD,CAAPa;AADF;AAGD;AAXH,QAD4B;AAAA,KAxDiB;;AAAArB,uEAuEpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAGnBoB,OAAO,CAACC,OAARD,EAHmB;;AAAA;AAKzB,kBAAI,MAAKlB,KAAL,CAAWC,OAAf,EAAwB;AACtB,sBAAKsB,IAAL;AADF,qBAEO;AACL,sBAAKC,IAAL;AACD;;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvEoB;;AAAA1B,gEAmF3B;AAAA,aAAM2B,sBAASC,EAATD,KAAgB,KAAhBA,IAAyB,cAAcE,MAA7C;AAAA,KAnF2B;;AAAA7B,wEAqFlB8B,YAAD,EAAiC;AAC3D,UAAIA,EAAE,IAAI,MAAKC,SAAL,EAAV,EAA4B;AAI1B,YAAMC,IAAS,GAAG,iCAAeF,EAAf,CAAlB;AACA,YAAMG,aAAa,GAAGD,IAAI,CAACE,aAALF,CAEpB,0EAFoBA,CAAtB;AAKAC,qBAAa,SAAbA,iBAAa,WAAbA,yBAAa,CAAEE,KAAfF;AACD;AAjG4C;;AAAAjC,oEAoGvB,YAAM;AAC5B,UAAI,MAAKE,KAAL,CAAWC,OAAf,EAAwB;AACtB,cAAKD,KAAL,CAAWkC,SAAX;AACD;;AACD,aAAO,IAAP;AAxG6C;;AAAApC,qEA2GrBqC,WAAD,EAAsB;AAC7C,UAAIA,CAAC,CAACC,GAAFD,KAAU,QAAd,EAAwB;AACtB,cAAKnC,KAAL,CAAWkC,SAAX;AACD;AA9G4C;;AAAApC,sEAiHrB,YAAM;AAC9B,YAAKuC,uBAAL,GAA+B,wCAC7BC,wBAD6B,EAE7B,mBAF6B,EAG7B,MAAKC,aAHwB,CAA/B;AAKA,YAAKC,sBAAL,GAA8B,wCAC5BC,uBAD4B,EAE5B,QAF4B,EAG5B,MAAKF,aAHuB,CAA9B;AAKA,YAAKV,SAAL,MAAoBa,QAAQ,CAACC,gBAATD,CAA0B,OAA1BA,EAAmC,MAAKE,cAAxCF,CAApB;AA5H6C;;AAAA5C,sEA+HrB,YAAM;AAAA;;AAC9B,qCAAKuC,uBAAL,gFAA8BQ,MAA9B;AACA,qCAAKL,sBAAL,gFAA6BK,MAA7B;AACA,YAAKhB,SAAL,MACEa,QAAQ,CAACI,mBAATJ,CAA6B,OAA7BA,EAAsC,MAAKE,cAA3CF,CADF;AAlI6C;;AAAA5C,2DAsIhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPiD,0BADO,GACQN,wBAAWO,GAAXP,CAAe,QAAfA,CADR;AAAA;AAAA,+CAE4BvB,OAAO,CAAC+B,GAAR/B,CAAY,CACnD,MAAKgC,iBAAL,EADmD,EAEnD,MAAKC,mBAAL,EAFmD,CAAZjC,CAF5B;;AAAA;AAAA;AAAA;AAENd,wBAFM;AAEMG,0BAFN;;AAAA,oBAcX,CAACwC,YAAY,CAAC1C,KAAd,IACA,CAAC0C,YAAY,CAACzC,MADd,IAEA,CAACF,UAAU,CAACC,KAFZ,IAGA,CAACD,UAAU,CAACE,MAHZ,IAIC,CAACC,YAAY,CAACF,KAAd,IAAuB,CAAC,MAAKiB,YAAL,CAAkB,MAAKtB,KAAL,CAAWe,MAA7B,CAJzB,IAKC,CAACR,YAAY,CAACD,MAAd,IAAwB,CAAC,MAAKgB,YAAL,CAAkB,MAAKtB,KAAL,CAAWe,MAA7B,CAnBf;AAAA;AAAA;AAAA;;AAqBXqC,mCAAqB,CAAC,MAAK7B,IAAN,CAArB6B;AArBW;;AAAA;AAyBb,oBAAKC,QAAL,CACE;AAAA,uBAAO;AACLlD,sBAAI,EAAEI,YAAY,CAACM,CADd;AAELX,qBAAG,EAAEK,YAAY,CAACO,CAFb;AAGLP,8BAAY,EAAE;AACZD,0BAAM,EAAEC,YAAY,CAACD,MADT;AAEZD,yBAAK,EAAEE,YAAY,CAACF;AAFR,mBAHT;AAOLD,4BAAU,EAAE;AACVC,yBAAK,EAAED,UAAU,CAACC,KADR;AAEVC,0BAAM,EAAEF,UAAU,CAACE;AAFT;AAPP,iBAAP;AAAA,eADF,EAaE,YAAM;AACJ,sBAAKgD,eAAL;;AAEA,oBAAQC,SAAR,GAAsB,MAAKvD,KAAL,CAAWwD,KAAjC,CAAQD,SAAR;;AACA9C,sCAASgD,QAAThD,CAAkB,CAChBA,sBAASiD,MAATjD,CAAgB,MAAKkD,KAAL,CAAWhD,cAA3BF,EAA2C;AACzCmD,yBAAO,EAAE;AAAE/C,qBAAC,EAAET,UAAU,CAACC,KAAhB;AAAuBS,qBAAC,EAAEV,UAAU,CAACE;AAArC,mBADgC;AAEzCuD,0BAAQ,EAAEpE,kBAAkB,GAAG8D,SAAS,CAACO,KAFA;AAGzCC,wBAAM,EAAErE,MAHiC;AAIzCsE,iCAAe,EAAE;AAJwB,iBAA3CvD,CADgB,EAOhBA,sBAASiD,MAATjD,CAAgB,MAAKkD,KAAL,CAAWnD,gBAA3BC,EAA6C;AAC3CmD,yBAAO,EAAE,CADkC;AAE3CC,0BAAQ,EAAEpE,kBAAkB,GAAG8D,SAAS,CAACO,KAFE;AAG3CC,wBAAM,EAAErE,MAHmC;AAI3CsE,iCAAe,EAAE;AAJ0B,iBAA7CvD,CAPgB,CAAlBA,EAaGwD,KAbHxD,CAaS,gBAAkB;AAAA,sBAAfyD,QAAe,QAAfA,QAAe;;AACzB,sBAAIA,QAAJ,EAAc;AACZ,0BAAKC,iBAAL,CAAuB,MAAK/C,IAA5B;AACD;AAhBH;AAjBJ;;AAzBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtIgC;;AAAAtB,2DAsMhC,YAAM;AACnB,YAAKsE,eAAL;;AAEA,UAAQb,SAAR,GAAsB,MAAKvD,KAAL,CAAWwD,KAAjC,CAAQD,SAAR;;AACA9C,4BAASiD,MAATjD,CAAgB,MAAKkD,KAAL,CAAWnD,gBAA3BC,EAA6C;AAC3CmD,eAAO,EAAE,CADkC;AAE3CC,gBAAQ,EAAEpE,kBAAkB,GAAG8D,SAAS,CAACO,KAFE;AAG3CC,cAAM,EAAErE,MAHmC;AAI3CsE,uBAAe,EAAE;AAJ0B,OAA7CvD,EAKGwD,KALHxD,CAKS,iBAAkB;AAAA,YAAfyD,QAAe,SAAfA,QAAe;;AACzB,YAAIA,QAAJ,EAAc;AACZ,gBAAKb,QAAL,CAAc;AAAEjD,sBAAU,EAAE;AAAEC,mBAAK,EAAE,CAAT;AAAYC,oBAAM,EAAE;AAApB,aAAd;AAAuCP,oBAAQ,EAAE;AAAjD,WAAd;;AACA,gBAAK4D,KAAL,CAAWhD,cAAX,CAA0B0D,QAA1B,CAAmC;AAAExD,aAAC,EAAE,CAAL;AAAQC,aAAC,EAAE;AAAX,WAAnC;;AACA,gBAAKqD,iBAAL,CAAuB,MAAKpD,MAA5B;AACD;AAVH;AA1M6C;;AAAA;AAAA;;;;WA2B/CuD,4BAAmBC,SAAnBD,EAAqC;AACnC,UAAIC,SAAS,CAACtE,OAAVsE,KAAsB,KAAKvE,KAAL,CAAWC,OAArC,EAA8C;AAC5C,aAAKuE,gBAAL;AACD;AACF;;;WAEDC,gCAAuB;AACrB,WAAKL,eAAL;AACD;;;WAqLDM,kBAAS;AAAA;;AACP,wBAUI,KAAK1E,KAVT;AAAA,UACEC,OADF,eACEA,OADF;AAAA,UAEEc,MAFF,eAEEA,MAFF;AAAA,UAGE4D,YAHF,eAGEA,YAHF;AAAA,UAIEC,KAJF,eAIEA,KAJF;AAAA,UAKEC,QALF,eAKEA,QALF;AAAA,UAMErB,KANF,eAMEA,KANF;AAAA,UAOEsB,eAPF,eAOEA,eAPF;AAAA,UAQE5C,SARF,eAQEA,SARF;AAAA,UASE6C,yBATF,eASEA,yBATF;AAYA,wBAMI,KAAKpB,KANT;AAAA,UACE5D,QADF,eACEA,QADF;AAAA,UAEEK,UAFF,eAEEA,UAFF;AAAA,UAGEG,YAHF,eAGEA,YAHF;AAAA,UAIEC,gBAJF,eAIEA,gBAJF;AAAA,UAKEG,cALF,eAKEA,cALF;AAQA,yBAAoB,KAAKgD,KAAzB;AAAA,UAAMxD,IAAN,gBAAMA,IAAN;AAAA,UAAYD,GAAZ,gBAAYA,GAAZ;;AAGA,UAAM8E,uBAAuB,GAAGvD,sBAASwD,MAATxD,CAAgB;AAC9CyD,eAAO,EAAEJ,eADqC;AAE9CK,eAAO,EAAE;AAFqC,OAAhB1D,CAAhC;;AAKA,UAAM2D,eAAe,GAAG,CACtB;AACEC,cAAM,EAAE1E,cAAc,CAACE,CAAfF,CAAiB2E,WAAjB3E,CAA6B;AACnC4E,oBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACC,KAAf,CADuB;AAEnCmF,qBAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B7E;AADV,OADsB,EAOtB;AACE8E,cAAM,EAAE9E,cAAc,CAACG,CAAfH,CAAiB2E,WAAjB3E,CAA6B;AACnC4E,oBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACE,MAAf,CADuB;AAEnCkF,qBAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B7E;AADV,OAPsB,CAAxB;;AAeA,UAAMoC,YAAY,GAAGN,wBAAWO,GAAXP,CAAe,QAAfA,CAArB;;AAGA,UAAMiD,kBAAkB,GAAG,EAA3B;;AAGA,UAAIvF,IAAI,IAAI4C,YAAY,CAAC1C,KAAb0C,GAAqB3C,UAAU,CAACC,KAAhC0C,GAAwCvD,aAApD,EAAmE;AACjEkG,0BAAkB,CAACC,IAAnBD,CAAwB;AACtBE,oBAAU,EAAEjF,cAAc,CAACE,CAAfF,CAAiB2E,WAAjB3E,CAA6B;AACvC4E,sBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACC,KAAf,CAD2B;AAEvCmF,uBAAW,EAAE,CAAC,EAAEpF,UAAU,CAACC,KAAXD,GAAmB,CAArB,CAAD,EAA0B,CAA1B;AAF0B,WAA7BO;AADU,SAAxB+E;;AAQA,YAAIvF,IAAI,GAAGX,aAAX,EAA0B;AACxBW,cAAI,GAAGX,aAAPW;AACD;AAXH,aAYO;AACLuF,0BAAkB,CAACC,IAAnBD,CAAwB;AACtBE,oBAAU,EAAEjF,cAAc,CAACE,CAAfF,CAAiB2E,WAAjB3E,CAA6B;AACvC4E,sBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACC,KAAf,CAD2B;AAEvCmF,uBAAW,EAAE,CAACpF,UAAU,CAACC,KAAXD,GAAmB,CAApB,EAAuB,CAAvB;AAF0B,WAA7BO;AADU,SAAxB+E;AAOAvF,YAAI,IAAII,YAAY,CAACF,KAAbE,GAAqBH,UAAU,CAACC,KAAxCF;AAEA,YAAM0F,KAAK,GAAG1F,IAAI,GAAGC,UAAU,CAACC,KAAhC;;AAEA,YAAIwF,KAAK,GAAG9C,YAAY,CAAC1C,KAAb0C,GAAqBvD,aAAjC,EAAgD;AAC9CW,cAAI,GAAG4C,YAAY,CAAC1C,KAAb0C,GAAqBvD,aAArBuD,GAAqC3C,UAAU,CAACC,KAAvDF;AACD;AA5EI;;AAiFP,UAAI2F,oBAAoB,GAAG,CAA3B;;AAGA,UAEE5F,GAAG,IACD6C,YAAY,CAACzC,MAAbyC,GACE3C,UAAU,CAACE,MADbyC,GAEEvD,aAFFuD,GAGEiC,uBAJJ9E,IAMAA,GAAG,IAAI6C,YAAY,CAACzC,MAAbyC,GAAsB7C,GAR/B,EASE;AAEA4F,4BAAoB,GAClB/C,YAAY,CAACzC,MAAbyC,GAAsB7C,GAAtB6C,GAA4BvD,aAA5BuD,GAA4CiC,uBAD9Cc;AAXF,aAaO,IAEL5F,GAAG,IACD6C,YAAY,CAACzC,MAAbyC,GACE3C,UAAU,CAACE,MADbyC,GAEEvD,aAFFuD,GAGEiC,uBAJJ9E,IAMAA,GAAG,IAAI6C,YAAY,CAACzC,MAAbyC,GAAsB7C,GAN7BA,IAQAA,GAAG,IACDE,UAAU,CAACE,MAAXF,GACEG,YAAY,CAACD,MADfF,GAEEZ,aAFFY,GAGE4E,uBAdC,EAeL;AAEAc,4BAAoB,GAClB5F,GAAG,GAAGK,YAAY,CAACD,MAAnBJ,GAA4BV,aAA5BU,GAA4C8E,uBAD9Cc;AAlHK;;AAuHPA,0BAAoB,GAClBA,oBAAoB,GAAG/C,YAAY,CAACzC,MAAbyC,GAAsB,IAAIvD,aAAjDsG,GACI/C,YAAY,CAACzC,MAAbyC,GAAsB,IAAIvD,aAD9BsG,GAEIA,oBAHNA;;AAOA,UAEE5F,GAAG,IACD6C,YAAY,CAACzC,MAAbyC,GACE3C,UAAU,CAACE,MADbyC,GAEEvD,aAFFuD,GAGEiC,uBAJJ9E,IAMCA,GAAG,IACF6C,YAAY,CAACzC,MAAbyC,GACE3C,UAAU,CAACE,MADbyC,GAEEvD,aAFFuD,GAGEiC,uBAJH9E,IAMCA,GAAG,IAAI6C,YAAY,CAACzC,MAAbyC,GAAsB7C,GAdjC,EAeE;AACAwF,0BAAkB,CAACC,IAAnBD,CAAwB;AACtBK,oBAAU,EAAEpF,cAAc,CAACG,CAAfH,CAAiB2E,WAAjB3E,CAA6B;AACvC4E,sBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACE,MAAf,CAD2B;AAEvCkF,uBAAW,EAAE,CAAC,EAAE,CAACM,oBAAoB,IAAI1F,UAAU,CAACE,MAApC,IAA8C,CAAhD,CAAD,EAAqD,CAArD;AAF0B,WAA7BK;AADU,SAAxB+E;;AAQA,YAAIxF,GAAG,GAAGV,aAAV,EAAyB;AACvBU,aAAG,GAAGV,aAANU;AACD;AA1BH,aA2BO;AACLwF,0BAAkB,CAACC,IAAnBD,CAAwB;AACtBK,oBAAU,EAAEpF,cAAc,CAACG,CAAfH,CAAiB2E,WAAjB3E,CAA6B;AACvC4E,sBAAU,EAAE,CAAC,CAAD,EAAInF,UAAU,CAACE,MAAf,CAD2B;AAEvCkF,uBAAW,EAAE,CAAC,CAACM,oBAAoB,IAAI1F,UAAU,CAACE,MAApC,IAA8C,CAA/C,EAAkD,CAAlD;AAF0B,WAA7BK;AADU,SAAxB+E;AAOAxF,WAAG,IAAIK,YAAY,CAACD,MAAbC,IAAuBuF,oBAAoB,IAAI1F,UAAU,CAACE,MAA1DC,CAAPL;AAEA,YAAM8F,MAAM,GACV9F,GAAG,IACF4F,oBAAoB,IAAI1F,UAAU,CAACE,MADjC,CAAHJ,GAEA8E,uBAHF;;AAMA,YAAIgB,MAAM,GAAGjD,YAAY,CAACzC,MAAbyC,GAAsBvD,aAAnC,EAAkD;AAChDU,aAAG,GACD4F,oBAAoB,KAAK/C,YAAY,CAACzC,MAAbyC,GAAsB,IAAIvD,aAAnDsG,GACI,CAACtG,aAAD,GAAiB,CADrBsG,GAEI/C,YAAY,CAACzC,MAAbyC,GACA3C,UAAU,CAACE,MADXyC,GAEAvD,aAFAuD,GAGAiC,uBANN9E;AAOD;AACF;;AAED,UAAM+F,wBAAwB;AAC5BC,eAAO,EAAE1F,gBADmB;AAE5B2F,iBAAS,EAAEf,eAFiB;AAG5BgB,oBAAY,EAAE5C,KAAK,CAAC6C;AAHQ,SAIxBP,oBAAoB,GAAG;AAAExF,cAAM,EAAEwF;AAAV,OAAH,GAAsC,EAJlC,CAA9B;;AAOA,UAAMQ,aAAa;AACjBpG,WAAG,EAAE,KAAKoB,YAAL,CAAkBP,MAAlB,IAA4Bb,GAA5B,GAAkCA,GAAG,GAAG8E;AAD5B,SAEbuB,yBAAYC,KAAZD,GAAoB;AAAEV,aAAK,EAAE1F;AAAT,OAApBoG,GAAsC;AAAEpG;AAAF,OAFzB,CAAnB;;AAKA,aACEa,oBAACyF,iBAAD;AACEC,WAAG,EAAGA,kBAAD,EAAS;AACZ,iBAAK3F,MAAL,GAAc2F,KAAd;AAFJ;AAIEC,mBAAW,EAAE;AAJf,SAMG,KAAKrF,YAAL,CAAkBP,MAAlB,IAA4B,IAA5B,GAAmCA,MANtC,EAOGhB,QAAQ,GACPiB,oBAAC4F,eAAD,QACE5F,oBAACyF,qCAAD;AACEI,0BAAkB,EAAE9B,yBADtB;AAEE+B,yBAAiB,EAAC,QAFpB;AAGEC,eAAO,EAAE7E;AAHX,SAKElB,oBAACyF,iBAAD;AAAM7B,aAAK,EAAEoC,wBAAWC;AAAxB,QALF,CADF,EAQEjG,oBAACyF,iBAAD;AACEC,WAAG,EAAGA,kBAAD,EAAS;AACZ,iBAAKtF,IAAL,GAAYsF,KAAZ;AAFJ;AAIEC,mBAAW,EAAE,KAJf;AAKEO,gCAAwB,EAAEjH,OAL5B;AAME2E,aAAK,EAAE,CAACuC,MAAM,CAACC,OAAR,EAAiBd,aAAjB,EAAgC1B,KAAhC,CANT;AAOEyC,qBAAa,EAAEpH,OAAO,GAAG,UAAH,GAAgB,MAPxC;AAQEqH,6BAAqB,EAAEpF;AARzB,SAUElB,oBAACyF,sBAASc,IAAV;AAAe3C,aAAK,EAAE;AAAEuB,mBAAS,EAAET;AAAb;AAAtB,SACE1E,oBAACwG,gBAAD;AACE5C,aAAK,EACH,CACEuC,MAAM,CAACM,mBADT,EAEExB,wBAFF,EAGEtB,YAHF;AAFJ,SASImB,oBAAoB,IACpB9E,oBAACyF,uBAAD,QAAa5B,QAAb,CADAiB,IAEI9E,oBAACA,KAAD,CAAO0G,QAAP,QAAiB7C,QAAjB,CAXR,CADF,CAVF,CARF,CADO,GAoCL,IA3CN,CADF;AA+CD;;;WA9b8B,kCAAC8C,SAAD,EAAmBC,SAAnB,EAAqC;AAClE,UAAID,SAAS,CAAC1H,OAAV0H,IAAqB,CAACC,SAAS,CAAC7H,QAApC,EAA8C;AAC5C,eAAO;AAAEA,kBAAQ,EAAE;AAAZ,SAAP;AACD;;AAED,aAAO,IAAP;AACD;;;;EAfgBiB,KAAK,CAAC6G,S;;gBAAnBhI,M,QAEUiI;;gBAFVjI,M,gBAIkB;AACpBiF,iBAAe,EAAEiD,kCADG;AAEpBhD,2BAAyB,EAAE;AAFP;;AAscxB,IAAMoC,MAAM,GAAGH,wBAAWgB,MAAXhB,CAAkB;AAC/BI,SAAO,EAAE;AACPa,YAAQ,EAAE;AADH,GADsB;AAI/BR,qBAAmB,EAAE;AACnBvB,WAAO,EAAE,CADU;AAEnBgC,mBAAe,EAAE,CAFE;AAGnBC,aAAS,EAAE;AAHQ;AAJU,CAAlBnB,CAAf;;eAWe,wBAAUnH,IAAV","names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","_defineProperty","rendered","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","anchor","React","isValidElement","Promise","resolve","menu","measureInWindow","isCoordinate","show","hide","Platform","OS","global","el","isBrowser","node","focusableNode","querySelector","focus","onDismiss","e","key","backHandlerSubscription","BackHandler","handleDismiss","dimensionsSubscription","Dimensions","document","addEventListener","handleKeypress","remove","removeEventListener","windowLayout","get","all","measureMenuLayout","measureAnchorLayout","requestAnimationFrame","setState","attachListeners","animation","theme","parallel","timing","state","toValue","duration","scale","easing","useNativeDriver","start","finished","focusFirstDOMNode","removeListeners","setValue","componentDidUpdate","prevProps","updateVisibility","componentWillUnmount","render","contentStyle","style","children","statusBarHeight","overlayAccessibilityLabel","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","I18nManager","isRTL","_reactNative","ref","collapsable","_Portal","accessibilityLabel","accessibilityRole","onPress","StyleSheet","absoluteFill","accessibilityViewIsModal","styles","wrapper","pointerEvents","onAccessibilityEscape","View","_Surface","shadowMenuContainer","Fragment","nextProps","prevState","Component","MenuItem","APPROX_STATUSBAR_HEIGHT","create","position","paddingVertical","elevation"],"sources":["Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n  NativeEventSubscription,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport type { $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\nimport MenuItem from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\nimport { addEventListener } from '../../utils/addEventListener';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\n   */\n  overlayAccessibilityLabel?: string;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Menu, Divider, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const openMenu = () => setVisible(true);\n *\n *   const closeMenu = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View\n *         style={{\n *           paddingTop: 50,\n *           flexDirection: 'row',\n *           justifyContent: 'center',\n *         }}>\n *         <Menu\n *           visible={visible}\n *           onDismiss={closeMenu}\n *           anchor={<Button onPress={openMenu}>Show menu</Button>}>\n *           <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *           <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *           <Divider />\n *           <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *         </Menu>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n    overlayAccessibilityLabel: 'Close menu',\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  private anchor?: View | null = null;\n  private menu?: View | null = null;\n  private backHandlerSubscription: NativeEventSubscription | undefined;\n  private dimensionsSubscription: NativeEventSubscription | undefined;\n\n  private isCoordinate = (anchor: any): anchor is { x: number; y: number } =>\n    !React.isValidElement(anchor) &&\n    typeof anchor?.x === 'number' &&\n    typeof anchor?.y === 'number';\n\n  private measureMenuLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      if (this.menu) {\n        this.menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>((resolve) => {\n      const { anchor } = this.props;\n      if (this.isCoordinate(anchor)) {\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this.anchor) {\n        this.anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  private updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private isBrowser = () => Platform.OS === 'web' && 'document' in global;\n\n  private focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this.isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode?.focus();\n    }\n  };\n\n  private handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  private handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  private attachListeners = () => {\n    this.backHandlerSubscription = addEventListener(\n      BackHandler,\n      'hardwareBackPress',\n      this.handleDismiss\n    );\n    this.dimensionsSubscription = addEventListener(\n      Dimensions,\n      'change',\n      this.handleDismiss\n    );\n    this.isBrowser() && document.addEventListener('keyup', this.handleKeypress);\n  };\n\n  private removeListeners = () => {\n    this.backHandlerSubscription?.remove();\n    this.dimensionsSubscription?.remove();\n    this.isBrowser() &&\n      document.removeEventListener('keyup', this.handleKeypress);\n  };\n\n  private show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this.measureMenuLayout(),\n      this.measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this.isCoordinate(this.props.anchor)) ||\n      (!anchorLayout.height && !this.isCoordinate(this.props.anchor))\n    ) {\n      requestAnimationFrame(this.show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this.attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this.focusFirstDOMNode(this.menu);\n          }\n        });\n      }\n    );\n  };\n\n  private hide = () => {\n    this.removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this.focusFirstDOMNode(this.anchor);\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n      overlayAccessibilityLabel,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={(ref) => {\n          this.anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this.isCoordinate(anchor) ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback\n              accessibilityLabel={overlayAccessibilityLabel}\n              accessibilityRole=\"button\"\n              onPress={onDismiss}\n            >\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={(ref) => {\n                this.menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n              onAccessibilityEscape={onDismiss}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"script"}